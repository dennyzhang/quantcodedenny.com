#+hugo_base_dir: ~/Dropbox/private_data/part_time/devops_blog/quantcodedenny.com
#+language: en
#+AUTHOR: dennyzhang
#+HUGO_TAGS: engineering leadership selling
#+TAGS: Important(i) noexport(n)
#+SEQ_TODO: TODO HALF ASSIGN | DONE CANCELED BYPASS DELEGATE DEFERRED
* Enage LLM for improvement                                        :noexport:
I have a draft blog post in org-mode. I want to **continuously improve it**, making it:

1. Clear, concise, and easy to follow.
2. Practical and habit-focused (small, daily actions that are easy to do).
3. Engaging, with examples, tips, or relatable scenarios.
4. Structured and scannable for readers.

Please act as my co-author and do the following:
**Step 1: Analyze**
- Identify overlapping sections, unclear sentences, or redundant points.
- Highlight areas where content could be more practical or actionable.
- Suggest any missing elements that would make it more helpful (e.g., examples, micro-actions, reflections).
**Step 2: Improve**
- Rewrite sentences or sections for clarity and flow.
- Make it more “I”-focused (first-person) if needed.
- Condense overly long sections while keeping essential content.
- Suggest ways to add new, high-value content (tips, mini-case studies, or scenarios).
**Step 3: Expand**
- Add optional content that could enhance the post without overloading the reader (bonus tips, habit variations, illustrative examples).
**Step 4: Present**
- Return the improved blog post in **org-mode format**, ready to copy and paste.
- Include a short note explaining what was changed or added.
**Constraints**
- Keep the post frictionless and practical — readers should be able to apply it daily.
- Avoid making the post too long or complex; prioritize usability over completeness.
- Preserve the original structure where possible (Introduction, Daily Habits, Routine, Reflection, Tips, Common Pitfalls, Conclusion).
- Highlight the changed content with prefix of >>
- Use org-mode format for output

Please help me improve it.

Here is the current version of my post:
[Paste your latest org-mode draft here]
* Improve Market Value
:PROPERTIES:
:EXPORT_FILE_NAME: improve-market-value
:EXPORT_DATE: 2025-10-03
:END:
URL: https://quantcodedenny.com/posts/improve-market-value/

Working deeply in ML Infra (like Meta or Google) can make your skills feel too specialized. You solve critical problems — but the broader market may not see your full capability.
The key is to **grow visibility and generalize impact organically**, through habits you already do daily.
** Core Principles
- **Think End-to-End** → Connect your work to business goals, reliability, and system health.
- **Focus on Non-Urgent Impact** → Block time weekly to fix recurring pain or document key learnings.
- **Translate to Market Value** → Frame results in measurable terms (revenue, cost, scale, reliability).
- **Learn and Share** → Write short notes or posts to spread knowledge and show thought leadership.
** Regular Routine
*** Weekly Habits
- [ ] **Learn broadly** → Attend 1 SEV or design review; observe recurring problems and system tradeoffs.
- [ ] **Connect cross-functionally** → Chat with 1 XFN lead to understand context and dependencies.
- [ ] **Reflect & share** → Write 1–3 bullet summary of key learning; note patterns, scripts, or principles.
*** Monthly Habits
- [ ] **Host & lead** → Run 1 design or postmortem discussion; practice influence, articulation, and framing decisions.
- [ ] **Mentor** → Coach 1–2 engineers; amplify impact and demonstrate multiplier behavior.
*** Quarterly Habits
- [ ] **Ship a measurable improvement** → Deliver 1 end-to-end enhancement; design for scale, reliability, and visibility.
- [ ] **Summarize impact** → Convert results into metrics or story for internal/external visibility.
*** Focus Blocks & Best Practices
- Protect 1–2 hours weekly for **important but non-urgent work**: blindspot review, systemic improvements, or skill expansion.
- Frame all incidents/projects with **business impact**: root cause, mitigation, downstream effect, prevented loss or restored capacity.
- Ask **system-level questions** before implementation: downstream effects, hidden dependencies, assumptions, failure modes.
- **Document & share patterns** weekly: recurring issues, scripts, or solutions that others can reuse.
- Use external framing: translate internal improvements into **transferable, marketable impact**.
** Watch Out For
- Local optimizations without system or business context.
- Not documenting key decisions.
- Avoiding cross-team or ambiguous problems.
- Over-relying on internal tech; always extract general principles.
** local notes                                                     :noexport:
*** comfortable to lead different teams and different probjects, as you have general skills
#+BEGIN_EXAMPLE

#+END_EXAMPLE
*** over-simplify will remove critical contexts, make the discusion conceptual
*** it's a good practice to enroll bootcamp and technical talks in the company or industry
*** it's common to have 3+ inhouse solutions for the same purpose, and they are always in migration path
*** be helpful and deep for your problem space
*** know your extended areas
*** how to enage and effective in leads discussion
I think it's a reasonable assumption - XXX

For XXX, I think this is an open area

there is also a disconnection betwen XXX and XXX

make sense. If I can jump ...

It's about xxx. I think we should push for xxx.

build a story and connect to the audience's mental models

say no to some work - this is a critical skill
- avoid overcommit
- align on goal(what), instead of how

look at the big picture - don't talk about nonsense
- do we align on them

the roi in my minds is not clear

as leader, you need to help the team
*** how to sit in the leads meeting and learn?
*** TODO how to create a collaboration where leads and senios can help your?
*** TODO how to set a tone(send a signal) for the team, yet don't have to say it explictly
*** [#A] how to provide values as IC6
** Mitigation: Organically improve market value                    :noexport:
1. **Skill Leverage**: Work on rare, transferable, high-impact skills.
2. **Visible Impact**: Quantify and share results internally.
3. **Network & Influence**: Expand reputation via mentorship, XFN projects, and selective external visibility.
* Improve Leadership Presence
:PROPERTIES:
:EXPORT_FILE_NAME: leadership-presence
:EXPORT_DATE: 2025-10-11
:EXPORT_HUGO_SECTION: posts
:END:
URL: https://quantcodedenny.com/posts/leadership-presence/
** Introduction
As an IC6 ML Infra Tech Lead, technical expertise alone is not enough. I need to be seen as a **leader** — someone who drives impact, earns trust, and inspires confidence across teams.

Leadership presence is about **how I show up, influence decisions, and make work visible**, especially under pressure. This post gives me a **daily-ready framework** to strengthen my leadership presence, including verbal and non-verbal communication.

---
** Core Principles
- **Be Calm and Clear Under Pressure**
  - I speak clearly and stay composed during crises.
  - I focus on facts and root causes, avoiding blame.
  - I summarize chaos into actionable next steps.
  - I model humility: “I don’t know yet, but I’ll find out.”
  - I protect the psychological safety of others in high-pressure moments.

- **Be Visible Without Boasting**
  - I share results and challenges concisely.
  - I focus on impact, not activity.
  - *Mini Habit:* Daily 1-sentence log of the day’s key contribution.

- **Frame Complexity as Leadership**
  - I highlight difficult trade-offs I managed and decisions I influenced.
  - *Template:* “This was challenging because [obstacle]. I enabled [team/org] to succeed by [action].”

- **Influence Through Credibility**
  - I let allies and cross-functional partners reinforce my contributions.
  - I actively recognize others and connect my work to organizational priorities.

- **Guide Decisions, Don’t Just Report**
  - I focus on outcomes and next steps, not every detail.
  - *Template:* “The key takeaway is [message]. I propose [next step]. Impact: [metric].”

- **Consistently Deliver and Communicate**
  - I pair execution with visibility.
  - I regularly summarize progress for managers, peers, and stakeholders.

- **Enhance Non-Verbal Presence**
  - I maintain open posture and relaxed gestures to signal confidence.
  - I use steady, clear, and well-paced voice; avoid filler words.
  - I practice pauses to let key points sink in.
  - *Mini Exercise:* Record 1–2 minutes of daily updates or rehearsal and self-review body language and tone.

---
** Daily Habits for Leadership Presence
- **Morning (5 min)**
  - Review yesterday’s work.
  - Identify **one key contribution or decision** to highlight.
  - Decide if any **ally or stakeholder** should be informed.
  - Quick body/voice warm-up: posture check, 1-minute clear articulation of top message.

- **During Work**
  - Capture **complexity, blockers, and learning** in a personal log.
  - When making design or system decisions, note **why the decision matters** for team/org goals.
  - Apply calm, credible behavior during crises: focus on facts, summarize chaos, protect others psychologically.
  - Use controlled gestures and deliberate pacing in meetings or calls.

- **End of Day (5 min)**
  - Fill in the **impact → complexity → credibility** flow:
    1. What impact did I create?
    2. What complexity or trade-offs did I handle?
    3. Who should be aware or can amplify this work?
  - Optional: 1-minute voice/body reflection or recording to self-calibrate.

- **Weekly (10–15 min)**
  - Summarize top 1–2 achievements.
  - Share structured updates with manager or cross-functional stakeholders.
  - Identify allies who can **echo your contributions**.
  - Practice 5–10 minutes of voice/body exercises: posture, tone, pacing, hand gestures.

---
** Practical Templates
- **1-Sentence Daily Log:**
  > “By [action], I [impact] despite [challenge], and [ally/team] is aware.”

- **Decision-Focused Update:**
* Stress Less, Lead Better
:PROPERTIES:
:EXPORT_FILE_NAME: eq-playbook
:EXPORT_DATE: 2025-09-30
:END:
URL: https://quantcodedenny.com/posts/eq-playbook/

As a tech lead, I want to ease mental stress and handle conflicts effectively.
This is my daily runbook for calm, clear, and high-leverage leadership.
** Core Principles (Memorable)
- **Pause Before Reacting**: Avoid knee-jerk responses.
- **Listen First**: Understand before responding.
- **Focus on Outcomes**: Prioritize shared goals, not ego.
- **Protect Boundaries**: Say no or redirect low-leverage work.
** Daily Action Routine
- **Morning (Start of Day)**: Review top 3 priorities; decide what to say "no" to.
- **Pre-Meeting**: Pause, breathe, note intended outcome.
- **During Conflict**: Listen fully; restate understanding before replying.
- **Work Blocks (≈90 mins)**: Take 5 min stretch/walk break.
- **Midday**: Hydrate, check posture, reset focus.
- **End of Day**: Log one win and one boundary I defended.
** Difficult Situations & Quick Actions
- **Disagreement on Priorities**: Frame trade-offs; explain business impact.
- **Boundary-Pushing Requests**: Acknowledge importance; suggest better owner; offer light support.
- **Cross-Team / Peer Conflict**: Listen, validate points, defuse tension, propose joint follow-up.
- **Escalations from Leadership**: Communicate facts clearly; outline immediate + long-term fix.
** Show Calm Through Signals
- Speak calmly; tone sets team baseline.
- Pause before responding; silence = confidence.
- Start with the point; avoid long background.
- Use ownership language: “I’ll handle this.”
- Ask curious, open questions: “Can you walk me through your thinking?”
- Reframe issues positively: “We can fix this early.”
** Energy & Focus Killers (Clustered)
- **Health Basics**: Poor sleep, nutrition, hydration, or movement → fatigue & brain fog.
- **Scattered Focus**: Multitasking & context switching → low efficiency.
- **Stress Ignored**: Bottling emotions → chronic depletion.
- **Weak Boundaries**: Overcommitting → diluted impact, burnout.
- **Environment**: Clutter, noise, bad lighting → lower alertness.
** Best Practices (Actionable)
- **Sleep & Move**: 7–9 hrs sleep; walk/stretch/exercise.
- **Eat & Hydrate**: Balanced meals; avoid sugar spikes; drink water.
- **Prioritize & Batch**: MITs / Eisenhower; avoid overcommitment.
- **Take Microbreaks**: 5–10 mins every 60–90 mins; reflect or journal.
- **Optimize Environment**: Light, tidy, comfortable.
- **Communicate Effectively**: Neutral, “we” language, summarize agreements, use Pause → Clarify → Respond → Follow-Up.
** Common Pitfalls
- Reacting instantly under stress.
- Treating conflict as win/lose.
- Assuming shared context.
- Taking low-leverage work just to be helpful.
** local notes                                                     :noexport:
*** Taking care of your appearance is a quiet way of showing confidence and control — both to yourself and to your team
*** [#A] avoid procrastination: no phone - go directly to the bed or wake up to walk
*** [#A] You become more valuable, when you learn how to solve the problem in a better way. Solving the same problem in the same way for 100 times doesn't count
write a report
create a project proposal
design a technical solution
*** avoid over-delegation and no boundary
weekly audit report: TPM don't want to own it
#+BEGIN_SRC text
As discussed, it would be more effective, if you(or/and XXX) can take it from this point and become POC to run the follow-up conversations.

I don't believe that is the right model though. There should be an E2E owner w/ help needed as is. Let's discuss in the meeting.
#+END_SRC
*** You don't want to own the "executive summary" for weekly audit report. With TPM push, you find no alternative.
*** avoid over-read: when friday, someone comment in a lead doc, saying: Please complete by Mon.
The comment applies to everyone. Not for you only.
*** For other teams' job, if you have difficulties to sell, leverage owning team instead
** Mitigation: Lower Mental Stress at Work                         :noexport:
1. **Systemic Strategies (Change how I work)**: Adjust workflow, environment, and collaboration to minimize recurring stressors.
    - Focus on problems where my technical expertise creates the most leverage; spend less time on areas outside my control (e.g., headcount, politics).
    - Proactively prioritize high-impact technical challenges instead of reacting to every request.
    - Build guardrails and scalable solutions to reduce firefighting.
    - Set clear boundaries: avoid over-committing and delegate or decline tasks others can own.
2. **Personal Strategies (Manage my mind & energy)**: Strengthen resilience to handle unavoidable stress.
    - Develop habits to stay focused and centered under pressure.
    - Protect time and energy for deep work and recovery.
    - Maintain clarity: sustained impact comes from resilience and focus, not from spreading myself thin.
* Look Better At Work
:PROPERTIES:
:EXPORT_FILE_NAME: look-better
:EXPORT_DATE: 2025-09-30
:END:
URL: https://quantcodedenny.com/posts/look-better/
** Introduction
For a successful tech lead, it usually has four steps: [[https://quantcodedenny.com/posts/scope-better/][scope better]] -> do better -> [[https://quantcodedenny.com/posts/look-better/][look better]] -> [[https://quantcodedenny.com/posts/connect-better/][connect better]].

Working hard alone isn’t enough. Leaders and decision-makers are busy — if they don’t see my impact, it might as well not exist.

Looking better at work is not self-promotion. It’s about making my contributions **visible, credible, and trusted**. I focus on three things:

- **Business Impact** – What tangible results did I achieve?
- **Complexity & Learning** – What challenges did I overcome, and what did I learn?
- **Credibility** – Did the right people notice my work, and did I involve or acknowledge others?

This post gives me a **daily-ready framework** to apply these principles with minimal thinking.
** Core Principles (3-Minute Shortcut)
- **Impact First**
  - I focus on results, not effort. I quantify outcomes (dollars, time, efficiency) and link them to team or company goals.
  - *Template:* “By doing X, I [saved $Y / improved efficiency by Z% / avoided a risk].”

- **Complexity & Learning**
  - I make hidden challenges and lessons visible. I highlight new skills, methods, or tools that improve future work.
  - *Template:* “This was challenging because [obstacle], and I solved it by [approach]. Learned: [key insight].”

- **Credibility**
  - Feedback from peers is more credible than self-promotion. I share updates, recognize others, and ensure the right people see my work.
  - *Template:* “Thanks to [ally/team], I achieved this result. I shared the approach with [stakeholders].”
** Project Complexity Checklist
- **Challenges & Hurdles**
  - [ ] I highlight major obstacles (technical, organizational, cross-team)
  - [ ] I explain how I solved them or mitigated risks

- **Learning & Innovation**
  - [ ] I capture new skills, methods, frameworks, or tools
  - [ ] I show how they benefit future projects or others

- **Dependencies & Coordination**
  - [ ] I note key dependencies and how I managed them

- **Secondary Impact**
  - [ ] I highlight outcomes beyond immediate metrics (efficiency gains, knowledge transfer)
** Daily & Weekly Runbook
- **Daily (2–5 min)**
  - I pick yesterday’s work and apply the **Impact → Complexity → Credibility** flow.
  - I fill the templates quickly.
  - Optional: I note challenges or insights in a personal log.

- **Weekly (10–15 min)**
  - I review my log and pick 1–2 visible achievements.
  - I share a structured update using templates with my manager, team, or cross-functional stakeholders.
  - I identify allies who can amplify my impact.
** Common Pitfalls
- Overdoing self-promotion damages trust.
- Not surfacing **business value** makes my work look like mere execution.
- Not surfacing **complexity & learning** undervalues my effort.
- Staying invisible leads to missed recognition and opportunities.
- Focusing on busyness instead of impact dilutes my reputation.
** Conclusion
Looking better at work is **not superficial** — it’s telling the full story of my contributions.
**Daily Habit:** Every day, I ask myself:
1. What **impact** can I highlight?
2. What **complexity & learning** did I uncover?
3. Who do I need to involve or inform to **build credibility**?

By following this **checklist + templates**, I make my work **visible, valued, and remembered** without overthinking.
** local notes                                                     :noexport:
Get Allies to Say It, Not Just You. Partner orgs (ML, Ads Infra, SRE) should echo the message: “Without PE continuing, we can’t meet reliability/scaling goals.”

Learn turn delivery into lasting ownership
- Make Success Tangible in Business Terms
- Start with Charter, Not Just Project: Deliverable is framed as a first milestone of ownership, not a one-off task.
- Write a Living Charter Document
*** don't kill your new hire - if you keep saying understaff, there is no miss in the team loobkack. the leads won't take it as a P0 ask
*** avoid always look behind
*** avoid caveat: voice is too low or talk too fast
*** avoid caveat: talk too details which generates confusions
* Connect Better At Work
:PROPERTIES:
:EXPORT_FILE_NAME: connect-better
:EXPORT_DATE: 2025-09-30
:END:
URL: https://quantcodedenny.com/posts/connect-better/
** Introduction
For a successful tech lead, it usually has four steps: [[https://quantcodedenny.com/posts/scope-better/][scope better]] -> do better -> [[https://quantcodedenny.com/posts/look-better/][look better]] -> [[https://quantcodedenny.com/posts/connect-better/][connect better]].

Doing great work is only part of success. My influence grows when others know, trust, and rely on me.

Connecting better at work is most powerful when it becomes a **small daily habit** — one or two simple actions that naturally build trust, relationships, and impact.
** Core Daily Habit
Each day, I focus on **one key action**:

- **Notice & Add Value** – Do at least one of these per day:
  - Ask a thoughtful question to understand someone’s priorities or challenges.
  - Share a useful resource, tip, introduction, or recognition.

- **Follow Through** – Complete or update one commitment each day.
  - If I can’t complete it, I proactively communicate the update.
** Daily Routine (2–3 min each)**
- **Morning:** Pick one person to check in with or help today.
- **During Day:** Apply **one core daily habit** naturally.
- **End of Day:** Log one insight or follow-up for tomorrow; optionally send a quick thank-you or recognition.
** Weekly Reflection (5 min)**
- Who did I meaningfully connect with this week?
- What one helpful action did I take for each person?
- Plan one simple connection action for next week.
** Quick Tips
- Small, consistent actions beat rare grand gestures.
- Focus on **helping others achieve their goals**, not just visibility.
- Keep notes in one place for easy follow-up.
** Common Pitfalls
- Focusing only on networking for personal gain feels transactional.
- Skipping follow-ups reduces trust.
- Ignoring listening or empathy weakens connections.
** Conclusion
Connecting better at work is both a **skill and a habit**. I make it automatic with **one simple action per day**: **notice, add value, or follow through**.

At the end of each week, I reflect briefly: **Who did I understand better, help, or stay connected with, and what simple action will strengthen the connection next week?**
** local notes                                                     :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* Scope Better At Work                                             :noexport:
URL: https://quantcodedenny.com/posts/scope-better/
** Introduction
For a successful tech lead, it usually has four steps: [[https://quantcodedenny.com/posts/scope-better/][scope better]] -> do better -> [[https://quantcodedenny.com/posts/look-better/][look better]] -> [[https://quantcodedenny.com/posts/connect-better/][connect better]].

One of the hardest skills to master as a tech lead is *scoping*—understanding the right problems to solve, sizing them correctly, and aligning them with team capacity and organizational priorities. Poor scoping leads to wasted effort, missed deadlines, or over-committing your team. On the other hand, good scoping sets the foundation for execution, influence, and impact.

This blog post is my personal journal on learning to *scope better*. I plan to keep updating it with new experiences, reflections, and frameworks as I encounter different challenges.
** Why Scoping Matters
Scoping is more than estimating timelines. It’s about:

- Choosing the right problems – Focus on work that delivers meaningful impact.
- Defining clear boundaries – Avoid scope creep and ensure deliverables are realistic.
- Aligning expectations – Make sure stakeholders, peers, and the team understand the “what” and “why.”
- Maximizing leverage – Prioritize work that scales or unlocks further opportunities.
** My Approach to Scoping
I’ve found a few practical techniques that help me scope better:

- Start with the problem, not the solution.
  - Ask: "What’s the problem we are really trying to solve?"
- Break work into milestones.
  - Large projects can be intimidating; splitting them into digestible chunks helps estimate more accurately.
- Validate assumptions early.
  - Run experiments, talk to users, or gather data to avoid over-committing to uncertain work.
- Use a "P0-P1-P2" framework.
  - Clearly identify the highest priority work versus nice-to-have work.
- Learn from past projects.
  - Keep track of what was over- or under-scoped and adjust future estimates.
** Finding Good Problems to Solve
A critical part of scoping is *finding good problems to tackle*. Some ways I approach this:

- Look for problems with high leverage—fixes or features that benefit multiple teams or users.
- Focus on repetitive pain points that slow down the org or team.
- Seek ambiguous challenges where clarity and leadership can make a difference.
- Align with org goals to ensure impact is recognized and resources are available.
** Lessons Learned
- It’s iterative.
  - Scoping is rarely perfect the first time. Adjust as new information arrives.
- Communication is key.
  - A well-scoped project is useless if the team and stakeholders don’t understand it.
- Balance ambition and realism.
  - Stretch goals are fine, but over-promising hurts credibility.
** Next Steps
I will continue experimenting with different scoping strategies and documenting outcomes. Over time, I hope this post will become a living guide for myself and others on how to *scope better* as a tech lead.
** #  --8<-------------------------- separator ------------------------>8-- :noexport:
** Success Stories                                                 :noexport:
1. **Feature Cleanup & Bad Feature Governance**
    - Core Strength Demonstrated: Business Problem Focus
    - Challenge: Legacy and unused features caused inefficiencies and stale data risks.
    - Action: Built a reliable feature usage lineage table, automated cleanup, and implemented rapid mitigation plans.
    - Impact: Reduced stale features by X%, minimized downstream errors, and saved engineers’ time.

2. **Feature Metadata Service**
    - Core Strength Demonstrated: End-to-End Ownership & Cross-Team Influence
    - Challenge: Lack of a single source of truth (SoT) for feature metadata made management and discovery difficult.
    - Action: Built a centralized feature metadata service covering both static and runtime metadata.
    - Impact: Enabled consistent feature management, improved discoverability, and reduced errors in feature usage across multiple ML teams.

3. **End-to-End Feature Infra Monitoring**
    - Core Strength Demonstrated: End-to-End Ownership & Cross-Team Influence
    - Challenge: Monitoring was fragmented across feature generation, serving, and model evaluation.
    - Action: Designed and implemented a comprehensive monitoring framework covering generating, serving, and model sides.
    - Impact: Enabled early detection of issues, reducing pipeline downtime and improving overall feature reliability.

4. **Data Pipeline Push at Scale**
    - Core Strength Demonstrated: Collaborative & Fair Partnership
    - Challenge: Pushing streaming pipelines took up to 1 month and slowed model iteration.
    - Action: Optimized infrastructure and processes to enable **scalable, automated pipeline pushes**.
    - Impact: Reduced pipeline deployment time from 1 month → 1 week, accelerating feature iteration and business impact.
** local notes                                                     :noexport:
*** [#A] didn't think big enough or run out of ideas: other teams want to help, but there are no work items
*** Some problems are doom to hard to fix.
e.g: ops heavy - trunk health, metadata, etc.
*** slow to go the details
For HD feature management, I know all the context. But takes quite a while to create a one-pager for group discussions.

Similar for feature metadata management
*** [#A] difficult to manage the complexity and articulate it well for the audience to comment
*** target on the most important problems, instead of less critical ones; but within you realm
*** SWE always have more shining projects
*** avoid being scared, then play safe
*** [#A] skip the non-critical problems/questions
learning how to learn
adapt to change
resilience
learn how to figure out what people want
how to interact in the world

这些生活体悟，对我很有启发。帮我找到更多类似的体悟，并给出具体示例
- 设立宏大目标可以激励自己和他人: 大目标提供方向感，让日常小努力不至于迷失。
- 千万不要提前焦虑，事情会以奇怪的方式解决
- 生活要做减法
- take the best advantage and enjoy what you already have
- minimalist can improve your freedom
*** doing a task(not chore): think and generalize in a prompt -> do it -> discuss with LLM for this task
*** guiding questions
- If this problem disappears, who benefits?
- What hard truth did I avoid?
*** guide attention to the right problems
*** Using tension as signal for missing clarity, not personal attack.
*** Don’t use AI to automate — use it to amplify thinking.
* Focus On P0 At Work                                              :noexport:
URL: https://quantcodedenny.com/posts/clarify-p0s-at-work/
** My Goal
I establish myself as a tech lead in ML infra with two main goals:
1. Work with **market value** — skills and outcomes recognized externally for career mobility.
2. Minimize **mental stress** — maintain well-being while delivering impact. More reading: [[https://quantcodedenny.com/posts/eq-playbook/][stress less, lead better]].
** My Core Strengths
1. **Self-Accountability**: Take full responsibility for both the work I commit to and the choices I decline, ensuring clarity and ownership in outcomes.
2. **Resiliency**: Maintain determination and focus in the face of obstacles, adapting strategies while keeping long-term goals intact.
3. **Impact-Driven Execution**: Prioritize opportunities that create measurable business wins, balancing scope with available bandwidth.
4. **Collaborative Partnership (Light)**: Work effectively with peers and cross-functional teams by aligning on shared goals and resolving conflicts constructively.
** My Growth Areas
1. **Communicate Clearly & Persuasively**: Align teams on goals and expectations; Summarize my work’s problem, solution, and impact concisely for directors, while keeping technical credibility for peers.
2. **Prioritize High-Leverage Work**: Focus my technical expertise on initiatives that drive measurable impact; delegate or decline low-value work
3. **Collaborate Effectively with Diverse Stakeholders**: Adapt communication style for different roles and personalities; Build alignment and influence without creating friction.
4. **Generalize, Share, & Mentor**: Capture patterns across my projects and share insights to scale impact; Mentor peers and document lessons learned for team adoption.
** Recent Key Learnings
1. **Leverage leadership and structures**
   - Tried bottom-up charter building, but XFN teams already had dedicated roles (reliability, efficiency, DevX).
   - Learning: Tap leadership and structures early to avoid prolonged struggles.

2. **Set bigger, strategic business goals**
   - Focused too narrowly on immediate team bandwidth.
   - Example: HD feature cleanup → incremental changes vs. holistic cleanup.
   - Learning: Aim for system-level impact, not just local optimizations.

3. **Focus on high-impact technical challenges**
   - Spent energy on headcount and conflicts where leverage was low.
   - Learning: Invest where technical expertise makes the most difference.

4. **Be more confident and assertive in requests**
   - Often accepted XFN deprioritization of my asks.
   - Example: Needed output validation (compilation) and feature checks (serving).
   - Learning: Advocate confidently for necessary changes, not just support passively.

5. **Spend more time generalizing problems and exchanging knowledge**
   - Solved problems in isolation, missed patterns and broader exchanges.
   - Learning: Step back, find repeatable insights, and share across teams.
* Scope Better At Work
:PROPERTIES:
:EXPORT_FILE_NAME: scope-better
:EXPORT_DATE: 2025-10-05
:END:
URL: https://quantcodedenny.com/posts/scope-better/

For a successful tech lead, it usually has four steps: **scope better → do better → look better → connect better.**

This post focuses on the first step — **scoping better**, the foundation of high-leverage impact.

---
** Start From Self: My Context and Strengths
> The best scoping starts from self-awareness. You can’t choose the right battles if you don’t know your strengths or goals.

- **My Strengths:** Systematic, calm under pressure, and able to connect technical depth to reliability outcomes.
  → Scope problems requiring pattern recognition and systemic fixes.
- **My Weakness:** Tend to over-invest in execution once scoped — need to *rescope regularly* and delegate earlier.
- **My Long-term Goal:** Become a staff+ engineer driving reliability and leverage across Ads ML Infra.
  → Pick problems that *shape systems and culture*, not just short-term wins.
- **My Personal Constraint:** Limited bandwidth — can only own 1–2 P0s at a time.
  → Be ruthless about focus and say “no” often.

---
** Focus On P0 At Work
> Practical lessons that help me stay centered and effective in noisy environments.

- Clarify the **real P0** — the one thing that truly moves the metric that matters.
- **Say no early.** Protect focus. Every “yes” adds cognitive debt.
- **Don’t rush to execution.** Step back to see system-level issues first.
- **Ask two key questions:**
  - “Which of these problems will still matter next half?”
  - “If I fix this, what downstream pain disappears?”
- **Protect mental space.** Calm reflection often reveals the real root cause faster than any debug session.
- **Treat scoping as a repeatable skill.** After each project, write a 3-line reflection on what was scoped well vs. poorly.
** Recent Key Learnings
- Turn delivery into ownership: living charter with purpose, boundaries, metrics, owner.
- Make success tangible: express impact in business or system reliability terms.
- Start with charter, not project: define “why this matters” first.
- Re-scope continuously: every quarter, check alignment with org priorities.
- Ask better questions: “Who benefits?” “What pain disappears?” “Is this worth owning next half?”

---
** How I Scope in Practice
- Review SEVs and postmortems → find recurring root causes.
- Observe where teams spend time firefighting → leverage points.
- Use LLMs to summarize org updates → spot alignment and gaps.
- Reframe “what’s broken” into “what’s worth fixing.”
- Pick 1–2 themes per half — anything beyond that is distraction.
- Validate early with manager or XFN leads before investing deeply.

---
** My Weekly Scoping Routine
- 🧠 Each Friday: write top 3 high-impact problems noticed.
- 📊 Rank by **impact × feasibility × alignment**.
- 🤝 Share one scoping note with manager for calibration.
- 🔁 End of month: reflect on what was scoped well or drifted.

---
** Outcome & Why Scoping Matters
Scoping well compounds momentum and reduces wasted effort:

- Focus on fewer but **high-leverage problems**.
- Make execution calm, credible, and measurable.
- Solve problems that unlock system-level improvements and benefit multiple teams.
- Communicate clearly so stakeholders, peers, and the team understand the “what” and “why.”
- Balance ambition with realism — stretch goals without over-promising.
- Grow trust as someone who *sees clearly and leads calmly.*
