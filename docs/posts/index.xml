<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on QuantCode: Use llm to improve your trading quality</title>
    <link>https://quantcodedenny.com/posts/</link>
    <description>Recent content in Posts on QuantCode: Use llm to improve your trading quality</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Oct 2025 16:42:57 -0700</lastBuildDate>
    <atom:link href="https://quantcodedenny.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using LLMs to Boost Infra IC6 Impact</title>
      <link>https://quantcodedenny.com/posts/ic6-use-llm/</link>
      <pubDate>Sun, 05 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/ic6-use-llm/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/ic6-use-llm/&#34;&gt;https://quantcodedenny.com/posts/ic6-use-llm/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-dot-introduction-and-common-pitfalls&#34;&gt;1. Introduction &amp;amp; Common Pitfalls&lt;/h2&gt;&#xA;&lt;p&gt;Being an IC6 Infra Engineer in a large corporate environment isn’t just about writing code.&#xA;It’s about &lt;strong&gt;driving systemic impact&lt;/strong&gt;, ensuring reliability, and influencing across teams.&lt;/p&gt;&#xA;&lt;p&gt;Common pitfalls IC6s face:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Staying too long in a bad setup&lt;/li&gt;&#xA;&lt;li&gt;Picking the wrong problem or direction&lt;/li&gt;&#xA;&lt;li&gt;Not leveraging your network&lt;/li&gt;&#xA;&lt;li&gt;Lacking structured thinking and clear framing&lt;/li&gt;&#xA;&lt;li&gt;Execution-only mindset without strategic reflection&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;LLMs can amplify thinking, communication, and operational impact — but only if used strategically.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Improve Market Value</title>
      <link>https://quantcodedenny.com/posts/improve-market-value/</link>
      <pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/improve-market-value/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/improve-market-value/&#34;&gt;https://quantcodedenny.com/posts/improve-market-value/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Working deeply in a specialized area like Meta or Google ML infra can easily make your expertise feel &lt;strong&gt;too narrow&lt;/strong&gt; — you solve critical problems, but your broader market value may not fully reflect your capabilities. Often, the challenge isn’t lack of knowledge; it’s being too busy with daily work, leaving no time for high-impact but non-urgent improvements or blindspots.&lt;/p&gt;&#xA;&lt;p&gt;This post is a living document to help tech leads &lt;strong&gt;organically increase market value&lt;/strong&gt;, stay visible, and continuously improve.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Preapare System Design</title>
      <link>https://quantcodedenny.com/posts/prepare-system-interview/</link>
      <pubDate>Fri, 03 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/prepare-system-interview/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/prepare-system-interview/&#34;&gt;https://quantcodedenny.com/posts/prepare-system-interview/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;System design interviews test not only technical skills but also strategic thinking, end-to-end ownership, scalability awareness, and cross-team influence.&lt;/p&gt;&#xA;&lt;p&gt;As a high-end IC6 (between IC6 and IC7), my goal is to bridge execution with strategic design thinking. This blog post consolidates my learnings from system design prep, especially for ML Infra contexts, and is designed to &lt;strong&gt;&lt;strong&gt;evolve as I add new insights&lt;/strong&gt;&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;system-design-leveling-35-mins&#34;&gt;System Design Leveling – 35 mins&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ic5&#34;&gt;IC5&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Independently chooses components to tell a coherent story.&lt;/li&gt;&#xA;&lt;li&gt;Covers end-to-end design with no significant gaps.&lt;/li&gt;&#xA;&lt;li&gt;Discusses tradeoffs and user impact, with prompting.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;ic6&#34;&gt;IC6&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Creates effective designs addressing multiple critical aspects.&lt;/li&gt;&#xA;&lt;li&gt;Anticipates problems, including maintainability and organizational challenges.&lt;/li&gt;&#xA;&lt;li&gt;Speaks thoroughly on tradeoffs, bottlenecks, and user impact with minimal prompting.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;ic7&#34;&gt;IC7&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Builds sophisticated designs addressing all stated and implicit parts of a problem.&lt;/li&gt;&#xA;&lt;li&gt;Proactively considers alternative solutions, immediate vs. long-term issues, and business needs.&lt;/li&gt;&#xA;&lt;li&gt;Covers all tradeoffs: technical, user impact, team dynamics, reliability, and sustainability.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ic6-system-design-interview-framework&#34;&gt;IC6 System Design Interview Framework&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-dot-problem-navigation-and-clarification&#34;&gt;1. Problem Navigation &amp;amp; Clarification&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;Just to confirm, we need a system for X with Y latency and Z throughput, correct?&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;What is the expected scale: daily active users, requests per second, or data volume?&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Do we need strong consistency, or is eventual consistency sufficient?&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Are there privacy or compliance constraints we need to consider?&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Let’s break the problem into three main components: ingestion, processing, serving.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;I want to highlight dependencies and areas that might require cross-team coordination.&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-dot-high-level-solution-design&#34;&gt;2. High-Level Solution Design&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;At a high level, the system would look like this: [describe layers or components].&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Data flows from ingestion → processing → storage → serving.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Each component is decoupled so that changes in one layer don’t impact others.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Let’s deep dive into the processing layer; we could use batch or stream depending on latency requirements.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Caching frequently requested data improves latency but introduces invalidation challenges.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;We should plan for spikes using queues, retries, and circuit breakers.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;We can segment functionality so individual components can be updated without impacting the system.&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-dot-trade-offs-and-technical-excellence&#34;&gt;3. Trade-offs &amp;amp; Technical Excellence&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;We could optimize for latency, but it would increase operational cost.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Sharding improves throughput but complicates cross-partition queries.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Eventual consistency reduces latency but requires careful handling of edge cases.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Using framework X provides distributed fault tolerance; framework Y has lower latency but higher complexity.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Multi-region replication improves availability but introduces latency trade-offs.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Subtle risks include version-to-version schema changes; we can handle them via backward-compatible migrations.&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-dot-communication-and-influence&#34;&gt;4. Communication &amp;amp; Influence&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;To summarize, here’s why I made each decision and the trade-offs involved.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;From a user perspective, this design ensures low latency for the majority of requests.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;I want to check if my assumptions about scale and growth align with your expectations.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;I hear your concern; here’s how I’d adjust the design.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;Let’s revisit the key bottlenecks and ensure the architecture addresses them.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;For future extensions, modular components can accommodate new requirements without major changes.&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;common-trade-off&#34;&gt;Common trade-off&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Trade-off&lt;/th&gt;&#xA;          &lt;th&gt;What it Means&lt;/th&gt;&#xA;          &lt;th&gt;Key Considerations / Questions to Ask Yourself&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Latency vs Throughput&lt;/td&gt;&#xA;          &lt;td&gt;Optimizing for faster responses may reduce total system throughput, and vice versa&lt;/td&gt;&#xA;          &lt;td&gt;How fast must requests complete? Can we batch or async some work? Can we precompute results?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Consistency vs Availability&lt;/td&gt;&#xA;          &lt;td&gt;Strong consistency may slow responses or reduce availability; eventual consistency improves availability but allows stale data&lt;/td&gt;&#xA;          &lt;td&gt;Does the user expect immediate read-your-writes consistency? Which parts of the system can tolerate eventual consistency?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Freshness vs Compute / Cost&lt;/td&gt;&#xA;          &lt;td&gt;Frequent updates improve freshness but increase CPU, I/O, or memory usage&lt;/td&gt;&#xA;          &lt;td&gt;How often do users need updated data? Can some updates be async or cached?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Complexity vs Extensibility&lt;/td&gt;&#xA;          &lt;td&gt;Simple designs are easier to implement, but flexible/modular designs are easier to evolve&lt;/td&gt;&#xA;          &lt;td&gt;Will the system need new features in the future? How can we make it modular without overengineering?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Storage vs Query Performance&lt;/td&gt;&#xA;          &lt;td&gt;Precomputing or denormalizing improves read performance but increases storage cost&lt;/td&gt;&#xA;          &lt;td&gt;Which data should be materialized? Can we compute some things on demand?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Generalization vs Edge-Case Optimization&lt;/td&gt;&#xA;          &lt;td&gt;Optimizing for the common case may hurt edge cases; handling every edge case can increase complexity&lt;/td&gt;&#xA;          &lt;td&gt;What’s the typical user scenario? Are there extreme cases that need special handling?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Observability vs Performance&lt;/td&gt;&#xA;          &lt;td&gt;Metrics, logs, and dashboards aid monitoring but can add latency or storage overhead&lt;/td&gt;&#xA;          &lt;td&gt;What key metrics/SLOs are critical? Can monitoring be async?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Scalability vs Simplicity&lt;/td&gt;&#xA;          &lt;td&gt;Designs that scale to millions/billions often require sharding, async pipelines, and caches, which increase system complexity&lt;/td&gt;&#xA;          &lt;td&gt;What is the expected growth? Can we start simple and evolve, or must it scale from day one?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Security / Privacy vs Usability&lt;/td&gt;&#xA;          &lt;td&gt;Strong security or privacy measures may slow performance or complicate user experience&lt;/td&gt;&#xA;          &lt;td&gt;What are compliance or privacy requirements? How does this affect API design or latency?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Consistency / Correctness vs Cost / Speed&lt;/td&gt;&#xA;          &lt;td&gt;Guaranteeing exact correctness may increase cost or reduce speed&lt;/td&gt;&#xA;          &lt;td&gt;Can approximate results suffice? Which operations require strong guarantees?&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;common-techniques&#34;&gt;Common techniques&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Technique&lt;/th&gt;&#xA;          &lt;th&gt;What it does&lt;/th&gt;&#xA;          &lt;th&gt;When to mention&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Push + Pull hybrid&lt;/td&gt;&#xA;          &lt;td&gt;Combines fan-out and fan-in based on follower count&lt;/td&gt;&#xA;          &lt;td&gt;If asked about celebrities or skewed followers&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Precomputed feed cache&lt;/td&gt;&#xA;          &lt;td&gt;Stores top N posts for a user&lt;/td&gt;&#xA;          &lt;td&gt;Helps meet strict read latency (P95 &amp;lt; 300 ms)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Sharded queues&lt;/td&gt;&#xA;          &lt;td&gt;Each user’s feed is partitioned&lt;/td&gt;&#xA;          &lt;td&gt;To scale for millions of users&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Asynchronous write pipelines (Kafka, stream processing)&lt;/td&gt;&#xA;          &lt;td&gt;Fan-out writes done asynchronously&lt;/td&gt;&#xA;          &lt;td&gt;Improves throughput and reduces write blocking&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Local re-ranking&lt;/td&gt;&#xA;          &lt;td&gt;Lightweight ranking at Serving layer&lt;/td&gt;&#xA;          &lt;td&gt;Adjust freshness, unseen content, or last-second boosts&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;known-patterns&#34;&gt;Known patterns&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Pattern&lt;/th&gt;&#xA;          &lt;th&gt;Description / Purpose&lt;/th&gt;&#xA;          &lt;th&gt;Pros&lt;/th&gt;&#xA;          &lt;th&gt;Cons / Trade-offs&lt;/th&gt;&#xA;          &lt;th&gt;Typical Use Cases&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Client-Server&lt;/td&gt;&#xA;          &lt;td&gt;Clients send requests, server responds&lt;/td&gt;&#xA;          &lt;td&gt;Simple, clear separation&lt;/td&gt;&#xA;          &lt;td&gt;Can be bottlenecked at server&lt;/td&gt;&#xA;          &lt;td&gt;Web apps, APIs, mobile backends&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Load Balancing / Horizontal Scaling&lt;/td&gt;&#xA;          &lt;td&gt;Distribute requests across multiple servers&lt;/td&gt;&#xA;          &lt;td&gt;High availability, fault tolerance&lt;/td&gt;&#xA;          &lt;td&gt;Complexity in routing, sticky sessions&lt;/td&gt;&#xA;          &lt;td&gt;High-traffic APIs, web services&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Caching&lt;/td&gt;&#xA;          &lt;td&gt;Store frequently accessed data&lt;/td&gt;&#xA;          &lt;td&gt;Reduces latency, lowers DB load&lt;/td&gt;&#xA;          &lt;td&gt;Cache invalidation complexity, stale data&lt;/td&gt;&#xA;          &lt;td&gt;DB queries, API responses, CDN content&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Sharding / Partitioning&lt;/td&gt;&#xA;          &lt;td&gt;Split data across nodes&lt;/td&gt;&#xA;          &lt;td&gt;Scales reads/writes&lt;/td&gt;&#xA;          &lt;td&gt;Harder joins, uneven load&lt;/td&gt;&#xA;          &lt;td&gt;Large user datasets, multi-tenant DBs&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Replication&lt;/td&gt;&#xA;          &lt;td&gt;Maintain multiple copies of data&lt;/td&gt;&#xA;          &lt;td&gt;High availability, disaster recovery&lt;/td&gt;&#xA;          &lt;td&gt;Consistency trade-offs&lt;/td&gt;&#xA;          &lt;td&gt;Multi-region DBs, fault-tolerant systems&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Event-Driven / Messaging&lt;/td&gt;&#xA;          &lt;td&gt;Asynchronous communication via messages/events&lt;/td&gt;&#xA;          &lt;td&gt;Decoupled, scalable&lt;/td&gt;&#xA;          &lt;td&gt;Message ordering, duplication issues&lt;/td&gt;&#xA;          &lt;td&gt;Logging, feature pipelines, order processing&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Microservices / SOA&lt;/td&gt;&#xA;          &lt;td&gt;Decompose monolith into independent services&lt;/td&gt;&#xA;          &lt;td&gt;Independent deployability, scalable per service&lt;/td&gt;&#xA;          &lt;td&gt;Service communication, data consistency&lt;/td&gt;&#xA;          &lt;td&gt;Large apps, ML pipelines, modular backend&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Queueing &amp;amp; Backpressure&lt;/td&gt;&#xA;          &lt;td&gt;Smooth spikes, decouple producer/consumer&lt;/td&gt;&#xA;          &lt;td&gt;Handles high load reliably&lt;/td&gt;&#xA;          &lt;td&gt;Requires monitoring, retry &amp;amp; dead-letter handling&lt;/td&gt;&#xA;          &lt;td&gt;Task queues, ingestion pipelines&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Rate Limiting / Throttling&lt;/td&gt;&#xA;          &lt;td&gt;Control request rates&lt;/td&gt;&#xA;          &lt;td&gt;Protects backend resources&lt;/td&gt;&#xA;          &lt;td&gt;Can block valid requests if too aggressive&lt;/td&gt;&#xA;          &lt;td&gt;APIs, microservices&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Proxy / Gateway&lt;/td&gt;&#xA;          &lt;td&gt;Intermediary for routing, caching, auth&lt;/td&gt;&#xA;          &lt;td&gt;Centralizes cross-cutting concerns&lt;/td&gt;&#xA;          &lt;td&gt;Single point of failure if not highly available&lt;/td&gt;&#xA;          &lt;td&gt;API gateway, reverse proxy, authentication&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Leader Election / Consensus&lt;/td&gt;&#xA;          &lt;td&gt;Distributed coordination, single source of truth&lt;/td&gt;&#xA;          &lt;td&gt;Ensures consistency, coordination&lt;/td&gt;&#xA;          &lt;td&gt;Complexity in distributed systems&lt;/td&gt;&#xA;          &lt;td&gt;Distributed locks, master selection, config&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Observability&lt;/td&gt;&#xA;          &lt;td&gt;Logging, metrics, tracing&lt;/td&gt;&#xA;          &lt;td&gt;Easier debugging and monitoring&lt;/td&gt;&#xA;          &lt;td&gt;Adds overhead, requires discipline&lt;/td&gt;&#xA;          &lt;td&gt;ML infra, microservices, pipelines&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Circuit Breaker / Retry&lt;/td&gt;&#xA;          &lt;td&gt;Protect services from cascading failures&lt;/td&gt;&#xA;          &lt;td&gt;Increases system resiliency&lt;/td&gt;&#xA;          &lt;td&gt;Misconfigured thresholds can block traffic unnecessarily&lt;/td&gt;&#xA;          &lt;td&gt;Microservices, external APIs&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Batch vs. Stream Processing&lt;/td&gt;&#xA;          &lt;td&gt;Process data in chunks vs. continuously&lt;/td&gt;&#xA;          &lt;td&gt;Batch: efficient, stream: low-latency&lt;/td&gt;&#xA;          &lt;td&gt;Batch: latency, Stream: complex error handling&lt;/td&gt;&#xA;          &lt;td&gt;ETL jobs, ML feature store updates, analytics&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;core-principles-for-system-design&#34;&gt;Core Principles for System Design&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-dot-problem-structuring&#34;&gt;1. Problem Structuring&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Clarify requirements and constraints (functional &amp;amp; non-functional, SLAs, ownership boundaries, future growth).&lt;/li&gt;&#xA;&lt;li&gt;Identify critical paths, unknowns, and dependencies.&lt;/li&gt;&#xA;&lt;li&gt;Use a structured approach to map problem → components → interactions.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-dot-trade-off-awareness&#34;&gt;2. Trade-Off Awareness&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Recognize and quantify trade-offs: latency vs. throughput, consistency vs. availability, cost vs. reliability.&lt;/li&gt;&#xA;&lt;li&gt;Include business, operational, and cross-team implications.&lt;/li&gt;&#xA;&lt;li&gt;IC7-level thinking anticipates tangential trade-offs proactively.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-dot-known-patterns-and-abstractions&#34;&gt;3. Known Patterns &amp;amp; Abstractions&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Apply reusable patterns: caching, sharding, load balancing, replication, event-driven architectures.&lt;/li&gt;&#xA;&lt;li&gt;Avoid reinventing solutions; justify deviations clearly.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-dot-scalability-and-reliability&#34;&gt;4. Scalability &amp;amp; Reliability&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Horizontal vs. vertical scaling.&lt;/li&gt;&#xA;&lt;li&gt;Fault tolerance, retries, backpressure handling, recovery strategies.&lt;/li&gt;&#xA;&lt;li&gt;Monitoring, alerts, and observability planning.&lt;/li&gt;&#xA;&lt;li&gt;Consider future-proofing and maintainability.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;5-dot-communication-and-influence&#34;&gt;5. Communication &amp;amp; Influence&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Present a structured narrative: context → problem → options → trade-offs → recommendation.&lt;/li&gt;&#xA;&lt;li&gt;Highlight strategic impact, not just technical correctness.&lt;/li&gt;&#xA;&lt;li&gt;Prepare concise “elevator pitches” for directors, PMs, and cross-functional teams.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ic6-system-design-practice-checklist&#34;&gt;IC6 System Design Practice Checklist&lt;/h2&gt;&#xA;&lt;h3 id=&#34;requirements-and-clarification&#34;&gt;Requirements &amp;amp; Clarification&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Functional vs. non-functional requirements.&lt;/li&gt;&#xA;&lt;li&gt;Latency, throughput, SLAs/SLOs.&lt;/li&gt;&#xA;&lt;li&gt;Ownership boundaries &amp;amp; team responsibilities.&lt;/li&gt;&#xA;&lt;li&gt;Expected growth &amp;amp; future-proofing needs.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;high-level-design&#34;&gt;High-Level Design&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Identify major components &amp;amp; interactions.&lt;/li&gt;&#xA;&lt;li&gt;Map data flow (ingestion → processing → serving).&lt;/li&gt;&#xA;&lt;li&gt;Define APIs, interfaces, and abstractions.&lt;/li&gt;&#xA;&lt;li&gt;Highlight cross-team dependencies.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;scaling-and-reliability&#34;&gt;Scaling &amp;amp; Reliability&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Horizontal vs. vertical scaling.&lt;/li&gt;&#xA;&lt;li&gt;Caching, sharding, partitioning.&lt;/li&gt;&#xA;&lt;li&gt;Fault tolerance &amp;amp; retries.&lt;/li&gt;&#xA;&lt;li&gt;Observability: monitoring, alerting, metrics.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;tradeoffs-and-options&#34;&gt;Tradeoffs &amp;amp; Options&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Pros/cons of architectural choices.&lt;/li&gt;&#xA;&lt;li&gt;Cost vs. performance vs. complexity.&lt;/li&gt;&#xA;&lt;li&gt;Business impact of each option.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;edge-cases-failure-modes&#34;&gt;Edge Cases / Failure Modes&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Identify points of failure and mitigation strategies.&lt;/li&gt;&#xA;&lt;li&gt;Discuss backpressure, stale data, network issues.&lt;/li&gt;&#xA;&lt;li&gt;Recovery, retries, fallback logic.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;influence-and-communication&#34;&gt;Influence &amp;amp; Communication&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Summarize decisions for non-technical stakeholders.&lt;/li&gt;&#xA;&lt;li&gt;Highlight trade-offs explicitly.&lt;/li&gt;&#xA;&lt;li&gt;Show strategic impact and maintain leadership presence.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;leadership-presence&#34;&gt;Leadership Presence&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Lead calmly and confidently.&lt;/li&gt;&#xA;&lt;li&gt;Encourage team input while framing final decisions.&lt;/li&gt;&#xA;&lt;li&gt;Maintain focus on high-leverage improvements.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Connect Better At Work</title>
      <link>https://quantcodedenny.com/posts/connect-better/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/connect-better/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/connect-better/&#34;&gt;https://quantcodedenny.com/posts/connect-better/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;For a successful tech lead, it usually has four steps: &lt;a href=&#34;https://quantcodedenny.com/posts/scope-better/&#34;&gt;scope better&lt;/a&gt; -&amp;gt; do better -&amp;gt; &lt;a href=&#34;https://quantcodedenny.com/posts/look-better/&#34;&gt;look better&lt;/a&gt; -&amp;gt; &lt;a href=&#34;https://quantcodedenny.com/posts/connect-better/&#34;&gt;connect better&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Doing great work is only part of success. My influence grows when others know, trust, and rely on me.&lt;/p&gt;&#xA;&lt;p&gt;Connecting better at work is most powerful when it becomes a &lt;strong&gt;&lt;strong&gt;small daily habit&lt;/strong&gt;&lt;/strong&gt; — one or two simple actions that naturally build trust, relationships, and impact.&lt;/p&gt;&#xA;&lt;h2 id=&#34;core-daily-habit&#34;&gt;Core Daily Habit&lt;/h2&gt;&#xA;&lt;p&gt;Each day, I focus on &lt;strong&gt;&lt;strong&gt;one key action&lt;/strong&gt;&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Look Better At Work</title>
      <link>https://quantcodedenny.com/posts/look-better/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/look-better/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/look-better/&#34;&gt;https://quantcodedenny.com/posts/look-better/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;For a successful tech lead, it usually has four steps: &lt;a href=&#34;https://quantcodedenny.com/posts/scope-better/&#34;&gt;scope better&lt;/a&gt; -&amp;gt; do better -&amp;gt; &lt;a href=&#34;https://quantcodedenny.com/posts/look-better/&#34;&gt;look better&lt;/a&gt; -&amp;gt; &lt;a href=&#34;https://quantcodedenny.com/posts/connect-better/&#34;&gt;connect better&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Working hard alone isn’t enough. Leaders and decision-makers are busy — if they don’t see my impact, it might as well not exist.&lt;/p&gt;&#xA;&lt;p&gt;Looking better at work is not self-promotion. It’s about making my contributions &lt;strong&gt;&lt;strong&gt;visible, credible, and trusted&lt;/strong&gt;&lt;/strong&gt;. I focus on three things:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Business Impact&lt;/strong&gt;&lt;/strong&gt; – What tangible results did I achieve?&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Complexity &amp;amp; Learning&lt;/strong&gt;&lt;/strong&gt; – What challenges did I overcome, and what did I learn?&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Credibility&lt;/strong&gt;&lt;/strong&gt; – Did the right people notice my work, and did I involve or acknowledge others?&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This post gives me a &lt;strong&gt;&lt;strong&gt;daily-ready framework&lt;/strong&gt;&lt;/strong&gt; to apply these principles with minimal thinking.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scope Better At Work</title>
      <link>https://quantcodedenny.com/posts/scope-better/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/scope-better/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/scope-better/&#34;&gt;https://quantcodedenny.com/posts/scope-better/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;For a successful tech lead, it usually has four steps: &lt;a href=&#34;https://quantcodedenny.com/posts/scope-better/&#34;&gt;scope better&lt;/a&gt; -&amp;gt; do better -&amp;gt; &lt;a href=&#34;https://quantcodedenny.com/posts/look-better/&#34;&gt;look better&lt;/a&gt; -&amp;gt; &lt;a href=&#34;https://quantcodedenny.com/posts/connect-better/&#34;&gt;connect better&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;One of the hardest skills to master as a tech lead is *scoping*—understanding the right problems to solve, sizing them correctly, and aligning them with team capacity and organizational priorities. Poor scoping leads to wasted effort, missed deadlines, or over-committing your team. On the other hand, good scoping sets the foundation for execution, influence, and impact.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stress Less, Lead Better</title>
      <link>https://quantcodedenny.com/posts/eq-playbook/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/eq-playbook/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/eq-playbook/&#34;&gt;https://quantcodedenny.com/posts/eq-playbook/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;As a tech lead, I want to ease my mental stress and be effective in conflict resolution.&#xA;This playbook is my daily runbook for staying calm, clear, and constructive under pressure.&lt;/p&gt;&#xA;&lt;h2 id=&#34;core-principles&#34;&gt;Core Principles&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Pause Before Reacting&lt;/strong&gt;&lt;/strong&gt;: Don’t let emotions drive my first response.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Listen First&lt;/strong&gt;&lt;/strong&gt;: Seek to understand before I respond.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Focus on Outcomes&lt;/strong&gt;&lt;/strong&gt;: Anchor on shared goals, not personal wins.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Protect My Boundaries&lt;/strong&gt;&lt;/strong&gt;: Say no or redirect misaligned work.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;difficult-situations-and-how-i-respond&#34;&gt;Difficult Situations and How I Respond&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Disagreement on Priorities&lt;/strong&gt;&lt;/strong&gt;&#xA;Example: PM pushes feature delivery, I see infra stability risk.&#xA;→ Frame trade-offs clearly; show business risk of ignoring infra.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Suggest Without Full Context</title>
      <link>https://quantcodedenny.com/posts/suggest-without-context/</link>
      <pubDate>Tue, 30 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/suggest-without-context/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/suggest-without-context/&#34;&gt;https://quantcodedenny.com/posts/suggest-without-context/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;A living runbook for learning from and giving suggestions to other teams&#xA;&lt;strong&gt;&lt;strong&gt;Why This Matters&lt;/strong&gt;&lt;/strong&gt;:&#xA;Cross-team collaboration is a critical part of tech lead work, yet you’re often asked to give feedback on efforts you don’t fully own or understand.&lt;/p&gt;&#xA;&lt;p&gt;In these moments, your ability to learn fast, frame thoughtful suggestions, and communicate with empathy defines your credibility.&lt;/p&gt;&#xA;&lt;p&gt;Good suggestions create momentum and build bridges. Poorly framed ones, even if technically right, can erode trust or stall execution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Focus On P0 At Work</title>
      <link>https://quantcodedenny.com/posts/clarify-p0s-at-work/</link>
      <pubDate>Mon, 29 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/clarify-p0s-at-work/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/clarify-p0s-at-work/&#34;&gt;https://quantcodedenny.com/posts/clarify-p0s-at-work/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;my-goal&#34;&gt;My Goal&lt;/h2&gt;&#xA;&lt;p&gt;I establish myself as a tech lead in ML infra with two main goals:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Work with &lt;strong&gt;&lt;strong&gt;market value&lt;/strong&gt;&lt;/strong&gt; — skills and outcomes recognized externally for career mobility.&lt;/li&gt;&#xA;&lt;li&gt;Minimize &lt;strong&gt;&lt;strong&gt;mental stress&lt;/strong&gt;&lt;/strong&gt; — maintain well-being while delivering impact. More reading: &lt;a href=&#34;https://quantcodedenny.com/posts/eq-playbook/&#34;&gt;stress less, lead better&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;my-core-strengths&#34;&gt;My Core Strengths&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Self-Accountability&lt;/strong&gt;&lt;/strong&gt;: Take full responsibility for both the work I commit to and the choices I decline, ensuring clarity and ownership in outcomes.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Resiliency&lt;/strong&gt;&lt;/strong&gt;: Maintain determination and focus in the face of obstacles, adapting strategies while keeping long-term goals intact.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Impact-Driven Execution&lt;/strong&gt;&lt;/strong&gt;: Prioritize opportunities that create measurable business wins, balancing scope with available bandwidth.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Collaborative Partnership (Light)&lt;/strong&gt;&lt;/strong&gt;: Work effectively with peers and cross-functional teams by aligning on shared goals and resolving conflicts constructively.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;my-growth-areas&#34;&gt;My Growth Areas&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Communicate Clearly &amp;amp; Persuasively&lt;/strong&gt;&lt;/strong&gt;: Align teams on goals and expectations; Summarize my work’s problem, solution, and impact concisely for directors, while keeping technical credibility for peers.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Prioritize High-Leverage Work&lt;/strong&gt;&lt;/strong&gt;: Focus my technical expertise on initiatives that drive measurable impact; delegate or decline low-value work&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Collaborate Effectively with Diverse Stakeholders&lt;/strong&gt;&lt;/strong&gt;: Adapt communication style for different roles and personalities; Build alignment and influence without creating friction.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Generalize, Share, &amp;amp; Mentor&lt;/strong&gt;&lt;/strong&gt;: Capture patterns across my projects and share insights to scale impact; Mentor peers and document lessons learned for team adoption.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;recent-key-learnings&#34;&gt;Recent Key Learnings&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Leverage leadership and structures&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Me And This Blog</title>
      <link>https://quantcodedenny.com/posts/self-intro/</link>
      <pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/self-intro/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/self-intro/&#34;&gt;https://quantcodedenny.com/posts/self-intro/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;set-context-for-llm-collobration&#34;&gt;Set context for LLM collobration&lt;/h2&gt;&#xA;&lt;p&gt;I am an experienced infra engineer (~20 years) with a personal&#xA;project: &lt;a href=&#34;https://quantcodedenny.com&#34;&gt;https://quantcodedenny.com&lt;/a&gt;, hosted on GitHub Pages (repo:&#xA;&lt;a href=&#34;https://github.com/dennyzhang/quantcodedenny.com/&#34;&gt;https://github.com/dennyzhang/quantcodedenny.com/&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;I focus on long-term investing in high-tech US stocks. I want to&#xA;explore LLM techniques to improve trading decision quality and provide&#xA;a free, reusable toolkit for engineering-driven indie traders.&lt;/p&gt;&#xA;&lt;h2 id=&#34;target-audience&#34;&gt;Target Audience&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Indie traders (not large financial institutions)&lt;/li&gt;&#xA;&lt;li&gt;Long-term investors (not day traders)&lt;/li&gt;&#xA;&lt;li&gt;Engineering or technical background&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;current-progress&#34;&gt;Current Progress&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Blog hosted on GitHub Pages with an initial feature: stock sentiment analyzer(&lt;a href=&#34;https://quantcodedenny.com/posts/llm-stock-sentiment/&#34;&gt;https://quantcodedenny.com/posts/llm-stock-sentiment/&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Targeting long-term tech investors with engineering backgrounds&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;task&#34;&gt;Task&lt;/h2&gt;&#xA;&lt;p&gt;You are a world-class entrepreneur, market analyst, and product strategist. Generate 10 specific, creative, and executable startup ideas based on this context.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Check Stock Sentiment With AI</title>
      <link>https://quantcodedenny.com/posts/llm-stock-sentiment/</link>
      <pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/llm-stock-sentiment/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/llm-stock-sentiment/&#34;&gt;https://quantcodedenny.com/posts/llm-stock-sentiment/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;0-intro&#34;&gt;0 Intro&lt;/h2&gt;&#xA;&lt;p&gt;This tool empowers engineers to automate stock sentiment analysis with&#xA;precision and speed.&lt;/p&gt;&#xA;&lt;p&gt;It combines two core capabilities: parsing recent&#xA;news headlines to extract market sentiment and insights, and parsing&#xA;SEC filings to surface key financial and risk information. Both&#xA;streams are fed into a configurable LLM pipeline, allowing you to run&#xA;fast local tests with lightweight models or perform high-accuracy&#xA;production analysis. Designed for modularity and reuse, it integrates&#xA;seamlessly into your workflows—turning raw data into actionable&#xA;insights without manual reading.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Drive V-Team Execution</title>
      <link>https://quantcodedenny.com/posts/drive-vteam-execution/</link>
      <pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/drive-vteam-execution/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/drive-vteam-execution/&#34;&gt;https://quantcodedenny.com/posts/drive-vteam-execution/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;set-llm-context&#34;&gt;Set LLM context&lt;/h2&gt;&#xA;&lt;p&gt;You are a staff+ engineer leading a cross-functional v-team. Your job is to:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Align incentives and positions.&lt;/li&gt;&#xA;&lt;li&gt;Surface constraints and roadblocks.&lt;/li&gt;&#xA;&lt;li&gt;Drive execution while managing bandwidth to avoid over-commitment.&lt;/li&gt;&#xA;&lt;li&gt;Keep the big picture in mind and ensure work aligns with org goals.&lt;/li&gt;&#xA;&lt;li&gt;Adopt a growth-oriented, solution-focused mindset: think strategically, balance ambition with realism, and maintain team trust and energy.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Your response depends on the command prefix:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Improve Technical Writing</title>
      <link>https://quantcodedenny.com/posts/improve-technical-writing/</link>
      <pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/improve-technical-writing/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/improve-technical-writing/&#34;&gt;https://quantcodedenny.com/posts/improve-technical-writing/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Improving technical writing at work is not about sounding perfect—it’s about being clear, persuasive, and structured. Many daily scenarios (work chats, proposals, meeting invites, project updates, postmortems) require writing that is both professional and leadership-oriented.&lt;/p&gt;&#xA;&lt;p&gt;To make this easier, I created a &lt;strong&gt;&lt;strong&gt;master prompt&lt;/strong&gt;&lt;/strong&gt; that turns raw drafts into polished writing. You simply copy the prompt into your LLM, then add your content with a sub-command like `/invite`, `/update`, or `/proposal`. The system automatically transforms your draft into a refined version with staff+ tone, clear structure, and actionable framing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Improve Trading Quality With AI</title>
      <link>https://quantcodedenny.com/posts/llm-trade-common-scenarios/</link>
      <pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/llm-trade-common-scenarios/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/llm-trade-common-scenarios/&#34;&gt;https://quantcodedenny.com/posts/llm-trade-common-scenarios/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;set-llm-context&#34;&gt;Set LLM context&lt;/h2&gt;&#xA;&lt;p&gt;Your role is to support disciplined stock trading decisions by analyzing scenarios with data-driven insights, emotional checks, and strategic recommendations. Use real-time market data, news, and trends where applicable (e.g., via web searches for current prices, volatility, or events). I will provide content prefixed by a command (e.g., /guardrail). Apply the corresponding workflow automatically.&lt;/p&gt;&#xA;&lt;p&gt;Universal Rules&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Tone&lt;/strong&gt;&lt;/strong&gt;: Adopt a calm, data-driven tone: clear, rational, and focused on long-term value over hype.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Basis&lt;/strong&gt;&lt;/strong&gt;: Base all assessments on verifiable facts (e.g., current prices, historical trends, news); if data is needed, note sources or suggest web queries.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Key Insights&lt;/strong&gt;&lt;/strong&gt;: Include a brief &amp;ldquo;Key Insights&amp;rdquo; section in every output to highlight reusable patterns or indicators.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;No Financial Advice&lt;/strong&gt;&lt;/strong&gt;: Never provide financial advice; frame outputs as analytical tools for user consideration.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/strong&gt;: All outputs must strictly follow the format for the identified command.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Commands &amp;amp; Workflows&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vibe Coding</title>
      <link>https://quantcodedenny.com/posts/llm-for-vibe-coding/</link>
      <pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/llm-for-vibe-coding/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/llm-for-vibe-coding/&#34;&gt;https://quantcodedenny.com/posts/llm-for-vibe-coding/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;set-llm-context&#34;&gt;Set LLM context&lt;/h2&gt;&#xA;&lt;p&gt;You are a senior staff-level engineer with a focus on code quality, scalability, maintainability, and architectural excellence. Your task depends on the command prefix I provide before the content.&lt;/p&gt;&#xA;&lt;p&gt;Your task depends on the command prefix I provide before the content.&lt;/p&gt;&#xA;&lt;p&gt;Your response should always be concise, constructive, and provide both critical feedback and an improved, rewritten version where possible.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-commands--workflows&#34;&gt;## Commands &amp;amp; Workflows&lt;/h2&gt;&#xA;&lt;h2 id=&#34;review-pr-️&#34;&gt;/review_pr ⚡️&lt;/h2&gt;&#xA;&lt;p&gt;This is your all-in-one command for a pull request (PR) review. It combines summarization, code critique, and mentorship.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Write Feedback At Work</title>
      <link>https://quantcodedenny.com/posts/write-interview-feedback/</link>
      <pubDate>Mon, 25 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://quantcodedenny.com/posts/write-interview-feedback/</guid>
      <description>&lt;p&gt;URL: &lt;a href=&#34;https://quantcodedenny.com/posts/write-feedback/&#34;&gt;https://quantcodedenny.com/posts/write-feedback/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;set-llm-context&#34;&gt;Set LLM context&lt;/h2&gt;&#xA;&lt;p&gt;You are a tech lead providing professional feedback. Feedback should be:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Specific (grounded in clear examples)&lt;/li&gt;&#xA;&lt;li&gt;Balanced (strengths + areas for improvement, unless not appropriate)&lt;/li&gt;&#xA;&lt;li&gt;Action-oriented (gives guidance for next steps)&lt;/li&gt;&#xA;&lt;li&gt;Succinct &amp;amp; professional (not overly wordy, but respectful)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;peer-peer-feedback&#34;&gt;/peer – Peer Feedback&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Use&lt;/strong&gt;&lt;/strong&gt;: Generate professional, structured feedback for a peer (same level or cross-functional).&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Goal&lt;/strong&gt;&lt;/strong&gt;: Highlight their impact, technical contributions, collaboration, and areas for growth using specific examples.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
