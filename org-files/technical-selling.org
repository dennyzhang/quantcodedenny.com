#+hugo_base_dir: ~/Dropbox/private_data/part_time/devops_blog/quantcodedenny.com
#+language: en
#+AUTHOR: dennyzhang
#+HUGO_TAGS: engineering leadership selling
#+TAGS: Important(i) noexport(n)
#+SEQ_TODO: TODO HALF ASSIGN | DONE CANCELED BYPASS DELEGATE DEFERRED
* Improve Market Value
:PROPERTIES:
:EXPORT_FILE_NAME: improve-market-value
:EXPORT_DATE: 2025-10-03
:END:
URL: https://quantcodedenny.com/posts/improve-market-value/

Working deeply in a specialized area like Meta or Google ML infra can easily make your expertise feel *too narrow* — you solve critical problems, but your broader market value may not fully reflect your capabilities. Often, the challenge isn’t lack of knowledge; it’s being too busy with daily work, leaving no time for high-impact but non-urgent improvements or blindspots.

This post is a living document to help tech leads *organically increase market value*, stay visible, and continuously improve.
** 1. Guiding Principles
- **Think End-to-End and Prioritize Impact**
  + Keep a mental map of the full system — data flows, dependencies, upstream/downstream impacts, and business objectives.
  + Ask daily: "How does this change affect other teams, user experience, and business metrics?"
- **Focus on Important but Not Urgent Work**
  + Identify blindspots: recurring issues, cross-team dependencies, systemic technical debt.
  + Block weekly time for reflection, documentation, and proactive improvement.
- **Translate Work into Marketable Achievements**
  + Frame accomplishments in revenue, cost savings, reliability, or scale.
  + Capture not just *what* was fixed, but *why it mattered*: “Reduced ad delivery latency by 15%, improving ad revenue predictability by X%.”
- **Document, Share, and Learn Across Teams**
  + Maintain daily notes or internal posts capturing problem, options, tradeoffs, and decisions.
  + Summarize patterns weekly to increase visibility and influence.

** 2. Good Practices
- **Frame P0/SEV incidents with business impact**
  + Log root cause, mitigation, and downstream effect.
  + Highlight prevented losses or restored capacity in marketable terms.
- **Design for scale and reliability**
  + Ask: "If traffic/data grows 5–10x, will this design hold?"
  + Document assumptions, constraints, and failure modes.
- **Share reusable learnings**
  + Daily: note patterns, gotchas, scripts that saved time.
  + Weekly: summarize in central doc or chat to benefit team.
- **Ask strategic, end-to-end questions**
  + Before implementation, ask about downstream impact or hidden dependencies.
  + Capture tradeoffs even if the decision is local.
- **Allocate deliberate focus time**
  + Weekly: protect 1–2 hours for reflection, blindspot review, systemic improvements, or skill expansion.

** 3. Bad Practices
- **Local optimization without context**
  + Fixing minor metrics without measuring system-wide or business impact.
  + Mitigation: document downstream consequences.
- **Not documenting decisions**
  + Knowledge gets siloed; team forgets key context.
  + Mitigation: 3 bullets per decision — problem, options, chosen path, rationale.
- **Avoiding ambiguous or cross-team problems**
  + Appears reactive or narrow.
  + Mitigation: log ambiguous issues and track next steps.
- **Over-reliance on internal tech**
  + Limits marketable skillset.
  + Mitigation: note underlying principles, patterns, and reasoning for tech choices.

** 4. Daily Runbook Approach
1. **Daily Reflection**: Capture what you learned, decisions made, tradeoffs, and why they matter.
2. **Weekly Focus Block**: 1–2 hours for important but non-urgent work (blindspots, systemic improvements, cross-team learning).
3. **Weekly Market Mapping**: Reframe work in industry terms; highlight transferable impact.
4. **Monthly Patterns Review**: Aggregate recurring issues, lessons, systemic improvements.
5. **Quarterly LLM Update**: Use an LLM to summarize, reframe, and extract marketable insights.

** 5. LLM Prompt Template for Continuous Improvement
#+BEGIN_SRC text
Context:
I am a tech lead working in Meta Ads Infra. 
I maintain a runbook of learnings, decisions, tradeoffs, and weekly focus work on blindspots and non-urgent improvements.

Task:
1. Summarize key patterns and decisions from the notes.
2. Highlight marketable achievements understandable outside my company.
3. Identify gaps in breadth, end-to-end thinking, or neglected blindspots that could increase market value.
4. Suggest improvements or principles to focus on next.
5. Output in org-mode format with actionable bullets suitable for daily practice.

Notes:
[PASTE YOUR RUNBOOK OR WEEKLY NOTES HERE]
#+END_SRC
** local notes                                                     :noexport:
*** over-simplify will remove critical contexts, make the discusion conceptual
* Stress Less, Lead Better
:PROPERTIES:
:EXPORT_FILE_NAME: eq-playbook
:EXPORT_DATE: 2025-09-30
:END:
URL: https://quantcodedenny.com/posts/eq-playbook/

As a tech lead, I want to ease my mental stress and be effective in conflict resolution.
This playbook is my daily runbook for staying calm, clear, and constructive under pressure.
** Core Principles
- **Pause Before Reacting**: Don’t let emotions drive my first response.
- **Listen First**: Seek to understand before I respond.
- **Focus on Outcomes**: Anchor on shared goals, not personal wins.
- **Protect My Boundaries**: Say no or redirect misaligned work.
** Difficult Situations and How I Respond
1. **Disagreement on Priorities**
   Example: PM pushes feature delivery, I see infra stability risk.
   → Frame trade-offs clearly; show business risk of ignoring infra.

2. **Boundary-Pushing Requests**
   Example: Asked to own solving cross-team incentive conflicts (low leverage).
   → Acknowledge importance, suggest better owner, offer lightweight support—not ownership.

3. **Cross-Team or Peer Conflict**
   Example: Partner team blames infra for latency spikes, or another TL challenges design harshly.
   → Listen without defensiveness, share data, acknowledge valid points, defuse tension, propose joint debugging or async follow-up.

4. **Escalations from Leadership**
   Example: Director demands “immediate fix” for ongoing SEV.
   → Communicate facts crisply, outline immediate fix + longer-term solution.
** Major Mistakes That Kill Energy
- **Neglecting Health Basics**: Skipping sleep, poor nutrition, dehydration, or no movement → fatigue, irritability, brain fog.
- **Scattered Focus**: Excessive multitasking or context switching → drains efficiency and mental clarity.
- **Ignoring Stress Signals**: Bottling emotions, not addressing mental health → chronic depletion.
- **Weak Boundaries**: Overcommitting or taking low-leverage work → diluted impact, faster burnout.
- **Poor Environment**: Clutter, noise, or bad lighting → reduced focus and motivation.
** Best Practices
- **Recharge Physically**: 7–9 hrs sleep, short naps if needed; move often with walks, stretches, or exercise.
- **Fuel Smartly**: Balanced meals (protein + complex carbs), hydration; limit sugar/caffeine spikes.
- **Work With Focus**: Prioritize clearly (Eisenhower or MITs), batch tasks, avoid overcommitment.
- **Reset Regularly**: Take 5–10 min breaks every 60–90 mins; use mindfulness, journaling, or reflection.
- **Shape the Environment**: Natural light, tidy space, comfortable temp/noise.
- **Communicate Effectively**: Neutral tone, “we” language, fact-driven; summarize agreements; use the cycle Pause → Clarify → Respond → Follow-Up.
** Common Pitfalls to Avoid
- Responding instantly when triggered.
- Framing conflict as win/lose instead of win/win.
- Assuming others share my context without clarification.
- Absorbing misaligned work just to “be helpful.”
** Daily Reminder
- **Start of Day**: Review top 3 priorities; mark what I will say "no" to.
- **Before Meetings**: Pause, breathe once, and note the outcome I want.
- **During Conflict**: Listen fully, then restate what I heard before replying.
- **After 90 Minutes of Work**: Step away for 5 mins; stretch or walk.
- **Midday Check-In**: Drink water, adjust posture, reset focus.
- **End of Day**: Write down one win and one boundary I defended.
** local notes                                                     :noexport:
*** avoid over-delegation and no boundary
weekly audit report: TPM don't want to own it
#+BEGIN_SRC text
As discussed, it would be more effective, if you(or/and XXX) can take it from this point and become POC to run the follow-up conversations.

I don't believe that is the right model though. There should be an E2E owner w/ help needed as is. Let's discuss in the meeting.
#+END_SRC
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* Focus On P0 At Work
:PROPERTIES:
:EXPORT_FILE_NAME: clarify-p0s-at-work
:EXPORT_DATE: 2025-09-29
:END:
URL: https://quantcodedenny.com/posts/clarify-p0s-at-work/
** My Goal
I establish myself as a tech lead in ML infra with two main goals:
1. Work with **market value** — skills and outcomes recognized externally for career mobility.
2. Minimize **mental stress** — maintain well-being while delivering impact. More reading: [[https://quantcodedenny.com/posts/eq-playbook/][stress less, lead better]].
** My Core Strengths
1. **Self-Accountability**: Take full responsibility for both the work I commit to and the choices I decline, ensuring clarity and ownership in outcomes.
2. **Resiliency**: Maintain determination and focus in the face of obstacles, adapting strategies while keeping long-term goals intact.
3. **Impact-Driven Execution**: Prioritize opportunities that create measurable business wins, balancing scope with available bandwidth.
4. **Collaborative Partnership (Light)**: Work effectively with peers and cross-functional teams by aligning on shared goals and resolving conflicts constructively.
** My Growth Areas
1. **Communicate Clearly & Persuasively**: Align teams on goals and expectations; Summarize my work’s problem, solution, and impact concisely for directors, while keeping technical credibility for peers.
2. **Prioritize High-Leverage Work**: Focus my technical expertise on initiatives that drive measurable impact; delegate or decline low-value work
3. **Collaborate Effectively with Diverse Stakeholders**: Adapt communication style for different roles and personalities; Build alignment and influence without creating friction.
4. **Generalize, Share, & Mentor**: Capture patterns across my projects and share insights to scale impact; Mentor peers and document lessons learned for team adoption.
** Recent Key Learnings
1. **Leverage leadership and structures**
   - Tried bottom-up charter building, but XFN teams already had dedicated roles (reliability, efficiency, DevX).
   - Learning: Tap leadership and structures early to avoid prolonged struggles.

2. **Set bigger, strategic business goals**
   - Focused too narrowly on immediate team bandwidth.
   - Example: HD feature cleanup → incremental changes vs. holistic cleanup.
   - Learning: Aim for system-level impact, not just local optimizations.

3. **Focus on high-impact technical challenges**
   - Spent energy on headcount and conflicts where leverage was low.
   - Learning: Invest where technical expertise makes the most difference.

4. **Be more confident and assertive in requests**
   - Often accepted XFN deprioritization of my asks.
   - Example: Needed output validation (compilation) and feature checks (serving).
   - Learning: Advocate confidently for necessary changes, not just support passively.

5. **Spend more time generalizing problems and exchanging knowledge**
   - Solved problems in isolation, missed patterns and broader exchanges.
   - Learning: Step back, find repeatable insights, and share across teams.
** Mitigation: Navigate Corporate Environment
1. **Make Value Visible**: Impact only counts if it’s measured and communicated.
2. **Align and Advocate**: Influence grows with alignment and proactive advocacy.
3. **Leverage, Don’t Reinvent**: Use existing processes and roles to accelerate outcomes.
** Mitigation: Organically improve market value
1. **Skill Leverage**: Work on rare, transferable, high-impact skills.
2. **Visible Impact**: Quantify and share results internally.
3. **Network & Influence**: Expand reputation via mentorship, XFN projects, and selective external visibility.
** Mitigation: Lower Mental Stress at Work
1. **Systemic Strategies (Change how I work)**: Adjust workflow, environment, and collaboration to minimize recurring stressors.
    - Focus on problems where my technical expertise creates the most leverage; spend less time on areas outside my control (e.g., headcount, politics).
    - Proactively prioritize high-impact technical challenges instead of reacting to every request.
    - Build guardrails and scalable solutions to reduce firefighting.
    - Set clear boundaries: avoid over-committing and delegate or decline tasks others can own.
2. **Personal Strategies (Manage my mind & energy)**: Strengthen resilience to handle unavoidable stress.
    - Develop habits to stay focused and centered under pressure.
    - Protect time and energy for deep work and recovery.
    - Maintain clarity: sustained impact comes from resilience and focus, not from spreading myself thin.
** Success Stories
1. **Feature Cleanup & Bad Feature Governance**
    - Core Strength Demonstrated: Business Problem Focus
    - Challenge: Legacy and unused features caused inefficiencies and stale data risks.
    - Action: Built a reliable feature usage lineage table, automated cleanup, and implemented rapid mitigation plans.
    - Impact: Reduced stale features by X%, minimized downstream errors, and saved engineers’ time.

2. **Feature Metadata Service**
    - Core Strength Demonstrated: End-to-End Ownership & Cross-Team Influence
    - Challenge: Lack of a single source of truth (SoT) for feature metadata made management and discovery difficult.
    - Action: Built a centralized feature metadata service covering both static and runtime metadata.
    - Impact: Enabled consistent feature management, improved discoverability, and reduced errors in feature usage across multiple ML teams.

3. **End-to-End Feature Infra Monitoring**
    - Core Strength Demonstrated: End-to-End Ownership & Cross-Team Influence
    - Challenge: Monitoring was fragmented across feature generation, serving, and model evaluation.
    - Action: Designed and implemented a comprehensive monitoring framework covering generating, serving, and model sides.
    - Impact: Enabled early detection of issues, reducing pipeline downtime and improving overall feature reliability.

4. **Data Pipeline Push at Scale**
    - Core Strength Demonstrated: Collaborative & Fair Partnership
    - Challenge: Pushing streaming pipelines took up to 1 month and slowed model iteration.
    - Action: Optimized infrastructure and processes to enable **scalable, automated pipeline pushes**.
    - Impact: Reduced pipeline deployment time from 1 month → 1 week, accelerating feature iteration and business impact.
** Enage LLM for improvement
Please create a prompt which can take my new learning and integrate into existing blog post
#+begin_src text
You are helping me continuously improve my Org-mode blog post titled “Clarify and Focus on My P0 at Work”.

Here’s how you should handle my new input:

1. **Goal**
   - Integrate my new learning, reflection, or example naturally into the existing blog post.
   - Ensure the update strengthens the post’s logic and reinforces my 3-year P0 priorities.

2. **Tone & Style**
   - Write in first person (“I”, “my”).
   - Keep the tone reflective, pragmatic, and authentic — grounded in experience.
   - Use concise, clear sentences; prefer active voice.
   - Maintain Org-mode formatting consistency (headings, lists, indentation).

3. **Integration Rules**
   - Place the new insight under the most relevant section (e.g., *Recent Key Learnings*, *Growth Areas*, or *Mitigation*).
   - If the new learning adds a pattern or shift in thinking, summarize the key takeaway in 1–2 lines and give a concrete example.
   - If the learning changes a previous view, update the old section instead of duplicating content.
   - Keep the overall flow coherent — every section should build toward my main goal: focusing on P0s that maximize **market value**, **ownership**, and **mental clarity**.

4. **Output**
   - Return the updated Org-mode text with my new content merged.
   - At the end, summarize briefly what was changed or where the new insight was integrated.

Here’s the current post:

[Paste current Org-mode blog post here]

Here’s my new learning:

[Paste your new learning or experience here]
#+end_src
** Set LLM context                                                 :noexport:
I want to clarify what is truly important to me at work and identify my 3-year P0 priorities. Below is my current context.

Please help me:
- Identify **core work values** and any conflicts or trade-offs
- Surface **blindspots or overlooked opportunities** in my current approach.
- Suggest what could be my **3-year P0s** based on this context
- Provide guidance on **filtering and prioritizing current workstreams** to align with these P0s.
- Recommend **strategic milestones** or actions to maximize market value, ownership, and energy efficiency

Please make the output:

- **Structured and actionable**
- **Compatible with Org-mode**, so I can copy it directly as a personal roadmap
- Include examples of **practical steps, metrics, or checkpoints** for each milestone
** 3-Year P0 Clarification Procedure                               :noexport:
- Define the Vision
   - Decide what success looks like in 3 years for me and my team.
   - Focus on outcomes, not tasks.
- Identify Levers
   - Find areas where focused effort now gives the biggest long-term impact.
- Set P0 Criteria
   - Define what counts as a true long-term P0 to filter initiatives consistently.
- Filter Workstreams
   - Keep only initiatives that meet my P0 criteria.
   - Delegate, pause, or deprioritize the rest.
- Build the Roadmap
   - Break each P0 into multi-year milestones for strategic execution.
- Checkpoints
** local notes                                                     :noexport:
learning how to learn
adapt to change
resilience
learn how to figure out what people want
how to interact in the world

这些生活体悟，对我很有启发。帮我找到更多类似的体悟，并给出具体示例
- 设立宏大目标可以激励自己和他人: 大目标提供方向感，让日常小努力不至于迷失。
- 千万不要提前焦虑，事情会以奇怪的方式解决
- 生活要做减法
- take the best advantage and enjoy what you already have
- minimalist can improve your freedom
* Scope Better At Work
:PROPERTIES:
:EXPORT_FILE_NAME: scope-better
:EXPORT_DATE: 2025-09-30
:END:
URL: https://quantcodedenny.com/posts/scope-better/
** Introduction
For a successful tech lead, it usually has four steps: [[https://quantcodedenny.com/posts/scope-better/][scope better]] -> do better -> [[https://quantcodedenny.com/posts/look-better/][look better]] -> [[https://quantcodedenny.com/posts/connect-better/][connect better]].

One of the hardest skills to master as a tech lead is *scoping*—understanding the right problems to solve, sizing them correctly, and aligning them with team capacity and organizational priorities. Poor scoping leads to wasted effort, missed deadlines, or over-committing your team. On the other hand, good scoping sets the foundation for execution, influence, and impact.

This blog post is my personal journal on learning to *scope better*. I plan to keep updating it with new experiences, reflections, and frameworks as I encounter different challenges.
** Why Scoping Matters
Scoping is more than estimating timelines. It’s about:

- Choosing the right problems – Focus on work that delivers meaningful impact.
- Defining clear boundaries – Avoid scope creep and ensure deliverables are realistic.
- Aligning expectations – Make sure stakeholders, peers, and the team understand the “what” and “why.”
- Maximizing leverage – Prioritize work that scales or unlocks further opportunities.
** My Approach to Scoping
I’ve found a few practical techniques that help me scope better:

- Start with the problem, not the solution.
  - Ask: "What’s the problem we are really trying to solve?"
- Break work into milestones.
  - Large projects can be intimidating; splitting them into digestible chunks helps estimate more accurately.
- Validate assumptions early.
  - Run experiments, talk to users, or gather data to avoid over-committing to uncertain work.
- Use a "P0-P1-P2" framework.
  - Clearly identify the highest priority work versus nice-to-have work.
- Learn from past projects.
  - Keep track of what was over- or under-scoped and adjust future estimates.
** Finding Good Problems to Solve
A critical part of scoping is *finding good problems to tackle*. Some ways I approach this:

- Look for problems with high leverage—fixes or features that benefit multiple teams or users.
- Focus on repetitive pain points that slow down the org or team.
- Seek ambiguous challenges where clarity and leadership can make a difference.
- Align with org goals to ensure impact is recognized and resources are available.
** Lessons Learned
- It’s iterative.
  - Scoping is rarely perfect the first time. Adjust as new information arrives.
- Communication is key.
  - A well-scoped project is useless if the team and stakeholders don’t understand it.
- Balance ambition and realism.
  - Stretch goals are fine, but over-promising hurts credibility.
** Next Steps
I will continue experimenting with different scoping strategies and documenting outcomes. Over time, I hope this post will become a living guide for myself and others on how to *scope better* as a tech lead.
** Enage LLM for improvement
Please create a prompt which can take my new learning and integrate into existing blog post
#+BEGIN_SRC text
You are helping me continuously improve my Org-mode blog post titled "Scoping Better: A Tech Lead’s Journey".

Here’s how I want you to handle my new input:

1. **Goal:** Integrate my new learning or example into the existing blog post naturally, without breaking flow.
2. **Style:**
   - Keep the tone reflective, pragmatic, and written in first-person.
   - Use concise and clear sentences.
   - Use Org-mode formatting consistently (headings, bullet points, etc.).
3. **Structure:**
   - If my new learning fits an existing section (like “My Approach to Scoping” or “Lessons Learned”), integrate it there.
   - If it introduces a new theme, create a new Org-mode section or subsection.
   - Always preserve the rest of the document and ensure logical flow between sections.
4. **Output:**
   - Return the full updated Org-mode content.
   - Clearly mark which part was newly added with a comment line: `#+BEGIN_COMMENT Updated` … `#+END_COMMENT`.

Here’s the current post:

[Paste current Org-mode blog post here]

Here’s my new learning:

[Paste your new learning or experience here]
#+END_SRC
** local notes                                                     :noexport:
*** [#A] didn't think big enough or run out of ideas: other teams want to help, but there are no work items
*** Some problems are doom to hard to fix.
e.g: ops heavy - trunk health, metadata, etc.
*** slow to go the details
For HD feature management, I know all the context. But takes quite a while to create a one-pager for group discussions.

Similar for feature metadata management
*** [#A] difficult to manage the complexity and articulate it well for the audience to comment
*** target on the most important problems, instead of less critical ones; but within you realm
*** SWE always have more shining projects
** llm prompt to improve market value                              :noexport:
I work on machine learning infra area. I want to pick problems strategically, so that I can build expertise in this area and bring market value.

Work on ML infra reliability, what are the top challenges
* Look Better At Work
:PROPERTIES:
:EXPORT_FILE_NAME: look-better
:EXPORT_DATE: 2025-09-30
:END:
URL: https://quantcodedenny.com/posts/look-better/
** Introduction
For a successful tech lead, it usually has four steps: [[https://quantcodedenny.com/posts/scope-better/][scope better]] -> do better -> [[https://quantcodedenny.com/posts/look-better/][look better]] -> [[https://quantcodedenny.com/posts/connect-better/][connect better]].

Working hard alone isn’t enough. Leaders and decision-makers are busy — if they don’t see my impact, it might as well not exist.

Looking better at work is not self-promotion. It’s about making my contributions **visible, credible, and trusted**. I focus on three things:

- **Business Impact** – What tangible results did I achieve?
- **Complexity & Learning** – What challenges did I overcome, and what did I learn?
- **Credibility** – Did the right people notice my work, and did I involve or acknowledge others?

This post gives me a **daily-ready framework** to apply these principles with minimal thinking.
** Core Principles (3-Minute Shortcut)
- **Impact First**
  - I focus on results, not effort. I quantify outcomes (dollars, time, efficiency) and link them to team or company goals.
  - *Template:* “By doing X, I [saved $Y / improved efficiency by Z% / avoided a risk].”

- **Complexity & Learning**
  - I make hidden challenges and lessons visible. I highlight new skills, methods, or tools that improve future work.
  - *Template:* “This was challenging because [obstacle], and I solved it by [approach]. Learned: [key insight].”

- **Credibility**
  - Feedback from peers is more credible than self-promotion. I share updates, recognize others, and ensure the right people see my work.
  - *Template:* “Thanks to [ally/team], I achieved this result. I shared the approach with [stakeholders].”
** Project Complexity Checklist
- **Challenges & Hurdles**
  - [ ] I highlight major obstacles (technical, organizational, cross-team)
  - [ ] I explain how I solved them or mitigated risks

- **Learning & Innovation**
  - [ ] I capture new skills, methods, frameworks, or tools
  - [ ] I show how they benefit future projects or others

- **Dependencies & Coordination**
  - [ ] I note key dependencies and how I managed them

- **Secondary Impact**
  - [ ] I highlight outcomes beyond immediate metrics (efficiency gains, knowledge transfer)
** Daily & Weekly Runbook
- **Daily (2–5 min)**
  - I pick yesterday’s work and apply the **Impact → Complexity → Credibility** flow.
  - I fill the templates quickly.
  - Optional: I note challenges or insights in a personal log.

- **Weekly (10–15 min)**
  - I review my log and pick 1–2 visible achievements.
  - I share a structured update using templates with my manager, team, or cross-functional stakeholders.
  - I identify allies who can amplify my impact.
** Common Pitfalls
- Overdoing self-promotion damages trust.
- Not surfacing **business value** makes my work look like mere execution.
- Not surfacing **complexity & learning** undervalues my effort.
- Staying invisible leads to missed recognition and opportunities.
- Focusing on busyness instead of impact dilutes my reputation.
** Conclusion
Looking better at work is **not superficial** — it’s telling the full story of my contributions.
**Daily Habit:** Every day, I ask myself:
1. What **impact** can I highlight?
2. What **complexity & learning** did I uncover?
3. Who do I need to involve or inform to **build credibility**?

By following this **checklist + templates**, I make my work **visible, valued, and remembered** without overthinking.
** Enage LLM for improvement
Please create a prompt which can take my new learning and integrate into existing blog post
#+BEGIN_SRC text
I want to update my Org-mode blog post titled “Look Better at Work.”

Goal: Continuously improve it by integrating my new learnings while keeping it clear, actionable, and first-person.

Instructions:

1. Read both the existing post and my new learning carefully.
2. Integrate the new ideas naturally into the post. You may add, merge, or rephrase sections.
3. Make the writing easy to follow and concise — remove any repetition.
4. Keep the tone first-person (“I/my”) and professional but relatable.
5. Add practical structure: short examples, checklists, or mini-habits that make it easier to apply in daily work.
6. Highlight key ideas with bold or bullets for readability.
7. Output the final blog post in Org-mode format, ready to publish.
8. At the end, include a short summary of what changed and why (1–2 sentences).

Existing post:

[paste your current Look Better at Work post here]


New learning or content to integrate:

[paste your new insight, story, or principle here]
#+END_SRC
** local notes
Get Allies to Say It, Not Just You. Partner orgs (ML, Ads Infra, SRE) should echo the message: “Without PE continuing, we can’t meet reliability/scaling goals.”

Learn turn delivery into lasting ownership
- Make Success Tangible in Business Terms
- Start with Charter, Not Just Project: Deliverable is framed as a first milestone of ownership, not a one-off task.
- Write a Living Charter Document
* Connect Better At Work
:PROPERTIES:
:EXPORT_FILE_NAME: connect-better
:EXPORT_DATE: 2025-09-30
:END:
URL: https://quantcodedenny.com/posts/connect-better/
** Introduction
For a successful tech lead, it usually has four steps: [[https://quantcodedenny.com/posts/scope-better/][scope better]] -> do better -> [[https://quantcodedenny.com/posts/look-better/][look better]] -> [[https://quantcodedenny.com/posts/connect-better/][connect better]].

Doing great work is only part of success. My influence grows when others know, trust, and rely on me.

Connecting better at work is most powerful when it becomes a **small daily habit** — one or two simple actions that naturally build trust, relationships, and impact.
** Core Daily Habit
Each day, I focus on **one key action**:

- **Notice & Add Value** – Do at least one of these per day:
  - Ask a thoughtful question to understand someone’s priorities or challenges.
  - Share a useful resource, tip, introduction, or recognition.

- **Follow Through** – Complete or update one commitment each day.
  - If I can’t complete it, I proactively communicate the update.
** Daily Routine (2–3 min each)**
- **Morning:** Pick one person to check in with or help today.
- **During Day:** Apply **one core daily habit** naturally.
- **End of Day:** Log one insight or follow-up for tomorrow; optionally send a quick thank-you or recognition.
** Weekly Reflection (5 min)**
- Who did I meaningfully connect with this week?
- What one helpful action did I take for each person?
- Plan one simple connection action for next week.
** Quick Tips
- Small, consistent actions beat rare grand gestures.
- Focus on **helping others achieve their goals**, not just visibility.
- Keep notes in one place for easy follow-up.
** Common Pitfalls
- Focusing only on networking for personal gain feels transactional.
- Skipping follow-ups reduces trust.
- Ignoring listening or empathy weakens connections.
** Conclusion
Connecting better at work is both a **skill and a habit**. I make it automatic with **one simple action per day**: **notice, add value, or follow through**.

At the end of each week, I reflect briefly: **Who did I understand better, help, or stay connected with, and what simple action will strengthen the connection next week?**
** Enage LLM for improvement
#+BEGIN_SRC text
I have a draft blog post in org-mode about "Connect Better at Work." I want to **continuously improve it**, making it:

1. Clear, concise, and easy to follow.
2. Practical and habit-focused (small, daily actions that are easy to do).
3. Engaging, with examples, tips, or relatable scenarios.
4. Structured and scannable for readers.

Please act as my co-author and do the following:
**Step 1: Analyze**
- Identify overlapping sections, unclear sentences, or redundant points.
- Highlight areas where content could be more practical or actionable.
- Suggest any missing elements that would make it more helpful (e.g., examples, micro-actions, reflections).
**Step 2: Improve**
- Rewrite sentences or sections for clarity and flow.
- Make it more “I”-focused (first-person) if needed.
- Condense overly long sections while keeping essential content.
- Suggest ways to add new, high-value content (tips, mini-case studies, or scenarios).
**Step 3: Expand**
- Add optional content that could enhance the post without overloading the reader (bonus tips, habit variations, illustrative examples).
**Step 4: Present**
- Return the improved blog post in **org-mode format**, ready to copy and paste.
- Include a short note explaining what was changed or added.
**Constraints**
- Keep the post frictionless and practical — readers should be able to apply it daily.
- Avoid making the post too long or complex; prioritize usability over completeness.
- Preserve the original structure where possible (Introduction, Daily Habits, Routine, Reflection, Tips, Common Pitfalls, Conclusion).

Here is the current version of my post:
[Paste your latest org-mode draft here]

Please help me improve it.
#+END_SRC
* Using LLMs to Boost Infra IC6 Impact
:PROPERTIES:
:EXPORT_FILE_NAME: ic6-use-llm
:EXPORT_DATE: 2025-10-05
:END:
URL: https://quantcodedenny.com/posts/ic6-use-llm/

** 1. Introduction & Common Pitfalls
Being an IC6 Infra Engineer in a large corporate environment isn’t just about writing code.
It’s about *driving systemic impact*, ensuring reliability, and influencing across teams.

Common pitfalls IC6s face:
- Staying too long in a bad setup
- Picking the wrong problem or direction
- Not leveraging your network
- Lacking structured thinking and clear framing
- Execution-only mindset without strategic reflection

LLMs can amplify thinking, communication, and operational impact — but only if used strategically.
** 2. Strategic Thinking & Problem Framing
*** Goal
Find the right problems, understand constraints, and align work with org priorities.
*** Key IC6 Tasks
- Identify impactful problems vs “noise” early
- Map stakeholders, incentives, and org-level priorities
- Anchor decisions to business/infra impact to gain support
- Preempt trade-offs, clarify ownership, and define measurable success
- Understand dependencies and design systems for resilience
*** LLM Leverage
- Summarize org strategy documents and leadership updates
- Highlight blind spots, alternative scenarios, or potential misalignments
- Map upstream/downstream dependencies and risks
*** LLM Prompts
#+BEGIN_SRC
Summarize key priorities from the last 3 leadership updates. Highlight potential conflicts or dependencies for the model serving infra project.
Compare three ML infra designs. List both technical and organizational trade-offs, including team dependencies and approval requirements.
#+END_SRC
** 3. Driving Execution & Operational Excellence
*** Goal
Deliver high-impact outcomes while managing complexity, reliability, and constraints.
*** Key IC6 Tasks
- Lead SEV triage, postmortems, and pre-mortems (3 failure modes + mitigations)
- Build guardrails, observability, and incremental improvements
- Identify bottlenecks and make unfixable issues fixable
- Prioritize high-impact tasks over low-leverage urgencies
- Balance speed vs thoroughness based on context
*** LLM Leverage
- Summarize SEV logs and recurring failure patterns
- Generate checklists or scripts to reduce manual effort
- Stress-test assumptions and simulate outcomes
*** Example Prompt
#+BEGIN_SRC
Analyze the last 3 SEVs and summarize recurring failure patterns. Suggest automated mitigation strategies.
Simulate outcomes for project trade-offs and highlight hidden risks.
#+END_SRC
** 4. Influence, Mentorship & Collaboration
*** Goal
Multiply impact beyond individual contribution through clear communication, mentorship, and collaboration.
*** Key IC6 Tasks
- Mentor IC5s and IC4s; document best practices
- Share work-in-progress documents and collect feedback
- Lead without authority: build trust and credibility
- Focus discussions on important issues, avoid distractions
- Synthesize before commenting; anticipate director-level perspective
*** LLM Leverage
- Generate mock scenarios for training or design review exercises
- Polish drafts, surface unclear points, summarize patterns and lessons
*** Example Prompt
#+BEGIN_SRC
Create a mock SEV scenario for an IC5 on model serving infra, highlighting operational risks and trade-offs.
Draft a proposal explaining why a new caching pattern reduces errors and aligns with org reliability goals.
#+END_SRC
** 5. Continuous Learning & Reflection
*** Goal
Adapt faster than evolving systems and org priorities.
*** Key IC6 Tasks
- Write weekly reflections: what worked, what failed, lessons learned
- Share distilled lessons with team via Slack/email
- Document playbooks, runbooks, and guardrails
- Analyze recurring blind spots from SEVs and design reviews
*** LLM Leverage
- Synthesize reflections into principles or concise takeaways
- Generate reflection prompts to improve decision-making
- Highlight recurring gaps in personal or team processes
*** LLM Prompts
#+BEGIN_SRC
Analyze my last 3 SEVs and identify patterns I tend to overlook.
Based on recent design reviews, highlight recurring gaps and suggest learning exercises.
#+END_SRC
** 6. Mastering AI/LLM for IC6 Impact
*** Goal
Use AI as a force multiplier to improve quality, speed, and strategic insight.
*** Mindset
- Be a learner, adapter, synthesizer: knowledge + action + insight = value
- Leverage AI to amplify, not replace thinking
- Embrace uncertainty: resilience and curiosity are superpowers
*** Top Skills
- Meta-learning: adapt to new tools, models, frameworks
- Human-centric insight: understand real problems
- Interpersonal & systems interaction: collaborate effectively
- Creative & strategic thinking: evaluate ideas and trade-offs
- Adaptability & flexibility: pivot as org and tech evolve
- Resilience & growth mindset: embrace failures and learn
*** LLM Master Prompt
#+BEGIN_SRC
You are my senior staff+ mentor and leadership coach.
Help me analyze ambiguous problems, sharpen judgment, and elevate thinking beyond execution.

Output:
- Reframe: strategic restatement of issue
- Key Dimensions: incentives, risks, org politics, ROI
- Critical Questions: sharpen judgment
- Options & Tradeoffs: possible paths with pros/cons
- Recommendation: pragmatic advice

Use in meetings, proposals, or influencing discussions.
#+END_SRC
** 7. Conclusion
IC6 Infra success is about *systemic impact, reliability, and influence*, not just coding.

LLMs act as a *force multiplier* — helping you:
- Understand incentives and org priorities
- Map constraints and trade-offs
- Build durable levers and guardrails
- Reflect and learn continuously

Applying this condensed framework ensures high-leverage focus and scalable impact across systems and teams.


